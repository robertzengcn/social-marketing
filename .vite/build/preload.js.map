{"version":3,"file":"preload.js","sources":["../../src/preload.js"],"sourcesContent":["import { contextBridge, ipcRenderer } from 'electron'\n// window.ipcRenderer = ipcRenderer\n// console.log('preload.js')\n// contextBridge.exposeInMainWorld('electronAPI', {\n//     userLogin: (data) => ipcRenderer.invoke('user:login', data)\n// })\ncontextBridge.exposeInMainWorld('api', {\n    send: (channel, data) => {\n      // whitelist channels\n      let validChannels = ['user:Login','socialtask:start']\n      console.log('send',channel,data)\n      if (validChannels.includes(channel)) {\n        console.log('send2',channel,data)\n        ipcRenderer.send(channel, data)\n      }\n    },\n    receive: (channel, func) => {\n      let validChannels = ['user:Login','socialtask:start']\n      if (validChannels.includes(channel)) {\n        // Deliberately strip event as it includes `sender`\n        ipcRenderer.on(channel, (event, ...args) => func(...args))\n      }\n    },\n    invoke: (channel, data) => {\n      // whitelist channels\n      let validChannels = ['user:Login','user:checklogin','campaign:list','socialtask:list','socialtask:info','socialtasktype:list','tag:list','socialtask:save','socialtask:start']\n      if (validChannels.includes(channel)) {\n        return ipcRenderer.invoke(channel, data)\n      }\n    }\n  })"],"names":["contextBridge","channel","data","validChannels","ipcRenderer","func","event","args"],"mappings":"yCAMAA,EAAAA,cAAc,kBAAkB,MAAO,CACnC,KAAM,CAACC,EAASC,IAAS,CAEvB,IAAIC,EAAgB,CAAC,aAAa,kBAAkB,EACpD,QAAQ,IAAI,OAAOF,EAAQC,CAAI,EAC3BC,EAAc,SAASF,CAAO,IAChC,QAAQ,IAAI,QAAQA,EAAQC,CAAI,EAChCE,cAAY,KAAKH,EAASC,CAAI,EAEjC,EACD,QAAS,CAACD,EAASI,IAAS,CACN,CAAC,aAAa,kBAAkB,EAClC,SAASJ,CAAO,GAEhCG,cAAY,GAAGH,EAAS,CAACK,KAAUC,IAASF,EAAK,GAAGE,CAAI,CAAC,CAE5D,EACD,OAAQ,CAACN,EAASC,IAAS,CAGzB,GADoB,CAAC,aAAa,kBAAkB,gBAAgB,kBAAkB,kBAAkB,sBAAsB,WAAW,kBAAkB,kBAAkB,EAC3J,SAASD,CAAO,EAChC,OAAOG,cAAY,OAAOH,EAASC,CAAI,CAE1C,CACF,CAAA"}