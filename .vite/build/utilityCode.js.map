{"version":3,"file":"utilityCode.js","sources":["../../src/modules/metadata.ts","../../src/modules/cryptosource.ts","../../src/modules/storeservice.ts","../../src/modules/token.ts","../../src/modules/lib/httpclient.ts","../../node_modules/jwt-decode/build/jwt-decode.esm.js","../../src/modules/remotesource.ts","../../src/modules/social_scraper.ts","../../src/modules/facebook_scraper.ts","../../src/modules/youtube_scraper.ts","../../src/modules/bilibili/downloader.ts","../../src/modules/lib/function.ts","../../src/modules/bilibili_scraper.ts","../../src/modules/videoedit.ts","../../src/model/scraperdb.ts","../../src/model/videodb.ts","../../src/modules/videodownload_observer.ts","../../src/concurrency-implementation.ts","../../src/node_socialmk.ts","../../src/modules/scrapeindex.ts","../../src/model/taskrundb.ts","../../node_modules/randombytes/browser.js","../../node_modules/randomstring/lib/charset.js","../../node_modules/randomstring/lib/randomstring.js","../../node_modules/randomstring/index.js","../../src/modules/socialtaskrun.ts","../../src/modules/socialtask.ts","../../src/utilityCode.ts"],"sourcesContent":["const cheerio = require('cheerio');\n\n// module.exports = {\n//     get_ip_data: get_ip_data,\n//     get_http_headers: get_http_headers,\n// };\n\nexport async function get_ip_data(page) {\n    await page.goto('https://ipinfo.io/json', {\n      waitLoad: true,\n      waitNetworkIdle: true\n    });\n    const json = await page.content({\n        timeout: 20000\n    });\n    const $ = cheerio.load(json);\n    const ipinfo_text =  $('pre').text();\n    return JSON.parse(ipinfo_text);\n}\n\nexport async function get_http_headers(page) {\n    await page.goto('https://httpbin.org/get', {\n      waitLoad: true,\n      waitNetworkIdle: true\n    });\n    const headers = await page.content();\n\n    const $ = cheerio.load(headers);\n    const headers_text =  $('pre').text();\n    return JSON.parse(headers_text);\n}","'use strict';\nexport {};\n//Checking the crypto module\nimport crypto from 'crypto';\nexport type encrytext={\n    iv:string,\n    encryptedData:string\n}\nexport class CryptoSource {\n    private algorithm:string = 'aes-256-cbc'; //Using AES encryption\n    private key:Buffer;\n    private iv:Buffer = crypto.randomBytes(16);\n    constructor() {\n        this.algorithm = 'aes-256-cbc'; //Using AES encryption\n        const salt=\"Tus7uAT6r3eSj9gVbF7Wic3ipNczYNK1\"\n        //this.key = Buffer.from(crypto.createHash(\"sha1\").update(salt).digest().slice(0, 16));\n        this.key = Buffer.from(salt);\n        this.iv = crypto.randomBytes(16);\n        // this.key=crypto.scryptSync(salt, 'GfG', 16)\n    }\n    //Encrypting text\n    encrypt(text:string):encrytext {\n        let cipher = crypto.createCipheriv(this.algorithm, this.key, this.iv);\n        let encrypted = cipher.update(text);\n        encrypted = Buffer.concat([encrypted, cipher.final()]);\n        return { iv: this.iv.toString('hex'), encryptedData: encrypted.toString('hex') };\n    }\n    // Decrypting text\n    decrypt(text:encrytext):string {\n        let iv = Buffer.from(text.iv, 'hex');\n        let encryptedText = Buffer.from(text.encryptedData, 'hex');\n        let decipher = crypto.createDecipheriv(this.algorithm, Buffer.from(this.key), iv);\n        let decrypted = decipher.update(encryptedText);\n        decrypted = Buffer.concat([decrypted, decipher.final()]);\n        return decrypted.toString();\n    }\n}\n\n\n//Encrypting text\n// function encrypt(text) {\n//    let cipher = crypto.createCipheriv('aes-256-cbc', Buffer.from(key), iv);\n//    let encrypted = cipher.update(text);\n//    encrypted = Buffer.concat([encrypted, cipher.final()]);\n//    return { iv: iv.toString('hex'), encryptedData: encrypted.toString('hex') };\n// }\n\n// Decrypting text\n// function decrypt(text) {\n//    let iv = Buffer.from(text.iv, 'hex');\n//    let encryptedText = Buffer.from(text.encryptedData, 'hex');\n//    let decipher = crypto.createDecipheriv('aes-256-cbc', Buffer.from(key), iv);\n//    let decrypted = decipher.update(encryptedText);\n//    decrypted = Buffer.concat([decrypted, decipher.final()]);\n//    return decrypted.toString();\n// }\n//}","// const keytar = require('keytar')\n// import keytar from 'keytar'\nconst keytar = require('keytar')\n\nexport class StoreService {\n    private service:string;\n    constructor(service:string){\n        this.service=service;\n    }\n    public setPassword(account:string, password:string){\n        keytar.setPassword(this.service, account, password)\n    } \n    //get password\n    public async getPassword(account:string):Promise<string | null>{\n        return await keytar.getPassword(this.service, account)\n    }\n\n}","\"use strict\";\nexport { };\n// const keytar = require('keytar')\n// const os = require('os');\nimport Store from 'electron-store';\nimport { safeStorage } from 'electron';\nimport { CryptoSource } from './cryptosource';\nimport {StoreService} from \"@/modules/storeservice\"\n\nexport class Token {\n\n    // private keytarService = 'SocialScraper-token';\n    private store: StoreService;\n    private useSafestore: boolean;\n\n    constructor() {\n        let option = {\n            encryptionKey: \"social-market-key\",//对配置文件进行加密\n            clearInvalidConfig: true, // 发生 SyntaxError  则清空配置,\n        }\n\n        this.store = new StoreService(\"social-market-token\");\n        // this.useSafestore=safeStorage?.isEncryptionAvailable();  \n        this.useSafestore = false;\n    }\n    //get account name\n    // private getaccountname():string{\n    //     return os.userInfo().username;\n    // }\n    //save user token\n    public setValue(key: string, token: string): void {\n        // console.log(\"encrypt token \"+token)\n        // console.log(safeStorage)\n        if (this.useSafestore) {\n            const buffer = safeStorage.encryptString(token);\n            // this.store.set(key, buffer.toString());\n            this.store.setPassword(key, buffer.toString());\n        } else {\n            //if system not support safe storage\n            const cryptModel = new CryptoSource();\n            const encrytoken = cryptModel.encrypt(token)\n            this.store.setPassword(key, JSON.stringify(encrytoken));\n        }\n        // keytar.setPassword(this.keytarService, this.getaccountname(), token)\n    }\n    //get user token\n    public async getValue(key: string): Promise<string|null> {\n        // console.log(\"the key is\"+key);\n        // const token=await keytar.getPassword(this.keytarService, this.getaccountname())\n        // const buffer = this.store.get(key) as string;\n        const buffer =await this.store.getPassword(key);\n        if (!buffer) {\n            return \"\";\n        }\n        if (this.useSafestore) {\n            return safeStorage.decryptString(Buffer.from(buffer))\n        } else {\n            //if system not support safe storage\n            const cryptModel = new CryptoSource();\n            return cryptModel.decrypt(JSON.parse(buffer))\n        }\n    }\n    //check encryption is available\n    public checkEncryavaile(key: string): boolean {\n        return safeStorage.isEncryptionAvailable()\n    }\n}\n\n","export type HttpClientOptions = {\n    headers?:HeadersInit;\n}\n// export type FetchOptions = {\n//     headers?: HeadersInit;\n// }\n//import { AuthInterceptor } from '@/modules/lib/authInterceptor';\nimport {Token} from \"@/modules/token\"\n// export type RemoteResp = {\n//   status: boolean,\n//   msg: string,\n//   data?: any,\n// }\nexport class HttpClient {\n    private _headers: HeadersInit = {};\n    private baseUrl: string;\n    constructor() {\n      //AuthInterceptor()\n      this.baseUrl = import.meta.env.VITE_REMOTEADD;\n      \n      // const tokenModel=new Token()\n      // const tokenval=tokenModel.getValue(\"social-market-token\")\n      // if (tokenval) {\n      //   //config.headers.Authorization = 'Bearer ' + tokenval\n      //   this.setHeader('Authorization', 'Bearer ' + tokenval)\n      // }\n    }\n\n    public async setheaderToken(){\n      const tokenModel=new Token()\n      const tokenval=await tokenModel.getValue(\"social-market-token\")\n      console.log(\"prepare to set token:\"+tokenval)\n      if (tokenval) {\n        //config.headers.Authorization = 'Bearer ' + tokenval\n        this.setHeader('Authorization', 'Bearer ' + tokenval)\n      }\n    }\n  \n    public async _fetchJSON(endpoint:string, options:RequestInit): Promise<any> {\n      await this.setheaderToken()\n      const res = await fetch(this.baseUrl+endpoint,\n        {...options,\n          headers: this._headers,\n        }\n       );\n       \n      if (!res.ok) throw new Error(res.statusText);\n  \n    //   if (options.parseResponse !== false && res.status !== 204)\n    //     return res.json();\n    const data = await res.json();\n    console.log(data)\n      return data;\n    }\n  \n    setHeader(key, value) {\n      this._headers[key] = value;\n      return this;\n    }\n  \n    getHeader(key) {\n      return this._headers[key];\n    }\n  \n    setBasicAuth(username, password) {\n      this._headers['Authorization'] = `Basic ${btoa(`${username}:${password}`)}`;\n      return this;\n    }\n  \n    setBearerAuth(token) {\n      this._headers['Authorization'] = `Bearer ${token}`;\n      return this;\n    }\n  \n    public async get(endpoint:string, options = {}): Promise<any> {\n      // const body = new URLSearchParams(params).toString();  \n      console.log(this._headers)\n      return this._fetchJSON(endpoint, {\n        ...options,\n        method: \"GET\",\n        // headers: this._headers,\n      });\n    }\n  \n    public async post(endpoint:string, formData:FormData, options = {}): Promise<any>{\n        // const body=new URLSearchParams(formData)\n        // const body=formData\n        // var requestOptions = {\n        //   method: 'POST',\n        //   headers: this._headers,\n        //   body: formData,\n          \n        // };\n        // return fetch(\"http://localhost:8082/user/login\", requestOptions)\n        // .then(response => {return response.json()})\n        // const postheader={'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'}\n        // let mergedhead = {...this._headers, ...postheader};\n        return this._fetchJSON(endpoint, {\n        ...options,\n        // headers: this._headers,\n        body: formData,\n        method: \"POST\"\n      });\n    }\n  \n    public async put(endpoint:string, data): Promise<any> {\n        return this._fetchJSON(endpoint, {\n        // headers: this._headers,\n        body: data ? JSON.stringify(data) : undefined,\n        method: \"PUT\"\n      });\n    }\n  \n    public async patch(endpoint:string, operations, options = {}): Promise<any> {\n      return this._fetchJSON(endpoint, {\n        ...options,\n        body: JSON.stringify(operations),\n        method: \"PATCH\",\n        // headers: this._headers,\n      });\n    }\n  \n    public async delete(endpoint:string, options = {}) {\n      return this._fetchJSON(endpoint, {\n        ...options,\n        method: \"DELETE\",\n        // headers: this._headers,\n      });\n    }\n  }\n  \n  export default HttpClient;","function e(e){this.message=e}e.prototype=new Error,e.prototype.name=\"InvalidCharacterError\";var r=\"undefined\"!=typeof window&&window.atob&&window.atob.bind(window)||function(r){var t=String(r).replace(/=+$/,\"\");if(t.length%4==1)throw new e(\"'atob' failed: The string to be decoded is not correctly encoded.\");for(var n,o,a=0,i=0,c=\"\";o=t.charAt(i++);~o&&(n=a%4?64*n+o:o,a++%4)?c+=String.fromCharCode(255&n>>(-2*a&6)):0)o=\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\".indexOf(o);return c};function t(e){var t=e.replace(/-/g,\"+\").replace(/_/g,\"/\");switch(t.length%4){case 0:break;case 2:t+=\"==\";break;case 3:t+=\"=\";break;default:throw\"Illegal base64url string!\"}try{return function(e){return decodeURIComponent(r(e).replace(/(.)/g,(function(e,r){var t=r.charCodeAt(0).toString(16).toUpperCase();return t.length<2&&(t=\"0\"+t),\"%\"+t})))}(t)}catch(e){return r(t)}}function n(e){this.message=e}function o(e,r){if(\"string\"!=typeof e)throw new n(\"Invalid token specified\");var o=!0===(r=r||{}).header?0:1;try{return JSON.parse(t(e.split(\".\")[o]))}catch(e){throw new n(\"Invalid token specified: \"+e.message)}}n.prototype=new Error,n.prototype.name=\"InvalidTokenError\";export default o;export{n as InvalidTokenError};\n//# sourceMappingURL=jwt-decode.esm.js.map\n","export { };\n// import axios from \"axios\";\n//import request from \"@/modules/lib/request\"\nimport { HttpClient } from \"@/modules/lib/httpclient\"\nimport jwt_decode from \"jwt-decode\";\nimport { Token } from \"./token\"\n// import { decode } from \"punycode\";\nconst debug = require('debug')('RemoteSource');\n// const url = require(\"url\");\n// const FormData = require('form-data');\ntype sosetting = {\n  sotype: string;\n  socialuser: string;\n  socialpass: string;\n  proxy: {\n    proxy: string;\n    user: string;\n    pass: string;\n  },\n}\nexport type Linkdata = {\n  id?: number,\n  title: string,\n  url: string,\n  content?: string,\n  lang: string,\n  socialtask_id: number,\n}\n\nexport type socialTask = {\n  id: number,\n  campaign_id: number,\n  campaign_name: string,\n  tag: string,\n  type: string,\n  keywords: Array<string>,\n  extra_task_info: {\n    TaskId: number\n    ResulttaskId?: number\n  }\n}\ntype configType = {\n  REMOTEADD: string,\n  REMOTEUSERNAME: string,\n  REMOTEPASSWORD: string,\n}\ntype keywordItem = {\n  keyword: string,\n  tag: string,\n  Created: string,\n  UsedTime: number,\n}\nexport type jwtUser = {\n  account_id: number,\n  email: string,\n  // token:string\n  roles: Array<string>,\n}\ntype jwtTokenUser = {\n  AccountId: number,\n  Email: string,\n  exp?: number,\n  iat?: number,\n  iss?: string,\n  Roles: Array<string>,\n}\n\nexport class RemoteSource {\n  private tokenname: string = \"social-market-token\";\n  // private static instance: RemoteSource;\n  REMOTEADD: string;\n  // REMOTEUSERNAME: string;\n  // REMOTEPASSWORD: string;\n  // private _Token:string;\n  private _httpClient: HttpClient\n  constructor() {\n\n    this._httpClient = new HttpClient();\n    // const config = this.readenv();\n    // this.REMOTEADD = config.REMOTEADD;\n    // this.tokenname=\"social-market-token\"\n    // this.REMOTEUSERNAME = config.REMOTEUSERNAME;\n    // this.REMOTEPASSWORD = config.REMOTEPASSWORD;\n  }\n\n  // public static getInstance(): RemoteSource {\n  //   if (!RemoteSource.instance) {\n  //     RemoteSource.instance = new RemoteSource();\n  //   }\n  //   return RemoteSource.instance;\n  // }\n\n\n  // readenv(): configType {\n  //   //read config from .env file\n  //   const envcofig = this.readConfig();\n  //   debug(envcofig)\n  //   //check key exist in object\n  //   if (!envcofig.hasOwnProperty(\"REMOTEADD\")) {\n  //     throw new Error(`REMOTEADD not found in .env file`);\n  //   }\n  //   if (!envcofig.hasOwnProperty(\"REMOTEUSERNAME\")) {\n  //     throw new Error(`USERNAME not found in .env file`);\n  //   }\n  //   if (!envcofig.hasOwnProperty(\"REMOTEPASSWORD\")) {\n  //     throw new Error(`PASSWORD not found in .env file`);\n  //   }\n  //   return envcofig as configType;\n  // }\n\n  /**\n   * read config from .env File\n   *\n   * @returns {object} config\n   * */\n  readConfig(): object {\n    const result = require(\"dotenv\").config();\n    if (result.error) {\n      throw result.error;\n    }\n    return result.parsed;\n  }\n\n  /**\n   * get response from remote servive\n   * @return object\n   */\n  async getRemoteConfig(campaignId): Promise<sosetting | void> {\n    // let envconfig = await readenv();\n\n    const sosetvar = this._httpClient.get(\n      \"/api/getsobyCam/?campaign_id=\" + campaignId\n    )\n      .then(function (res) {\n        if (res.status != 200) {\n          throw new Error(\"code not equal 200\");\n        }\n        if (!res.data.status) {\n          throw new Error(\"code not equal 200\");\n        }\n        // console.log(res.status)\n        // console.log(res.data.data.user)\n        // console.log(res.data.data.pass)\n        // console.log(res.data.data.proxy)\n        const sosetting = {\n          sotype: res.data.data.sotype,\n          socialuser: res.data.data.user,\n          socialpass: res.data.data.pass,\n          proxy: {\n            proxy: res.data.data.proxy.url,\n            user: res.data.data.proxy.user,\n            pass: res.data.data.proxy.pass,\n          },\n        };\n        return sosetting;\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n\n    return sosetvar;\n\n  }\n\n\n  /**\n   * save link to remote servive\n   */\n  async saveLinkremote(link: Linkdata): Promise<number> {\n    const FormData = require('form-data');\n    debug(link)\n    const data = new FormData();\n    data.append('title', link.title);\n    if (link.content) {\n      data.append('content', link.content);\n    }\n    data.append('url', link.url);\n    data.append('lang', link.lang);\n    if (link.socialtask_id) {\n      data.append('socialtask_id', link.socialtask_id);\n    }\n    // debug(this.REMOTEUSERNAME)\n    // debug(this.REMOTEPASSWORD)\n    const linkId = this._httpClient.post(\n      \"/api/savesolink\",\n      data\n    )\n      .then(function (res) {\n        // debug(res);\n        // console.log(res)\n        return res.data.data as number;\n      })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n    return linkId;\n  }\n  //get scrapy info list\n  async Getscrapyinfolist(taskId: number, limit: number): Promise<Array<Linkdata> | null> {\n    const linkdaarr = this._httpClient.get(\n      \"/api/getscrapeinfolist?sotaskid=\" + taskId + \"&limit=\" + limit\n    ).then(function (res) {\n      debug(res);\n      // console.log(res)\n      if (res.data.data) {\n        return res.data.data as Array<Linkdata>;\n      } else {\n        return null;\n      }\n    })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n    return linkdaarr;\n  }\n  /**\n   * get task info\n   * @param taskId \n   */\n  async Gettaskinfo(taskId: number): Promise<null | socialTask> {\n    const taskInfo = this._httpClient.get(\n      \"/api/getsocialtaskinfo?task_id=\" + taskId,\n    ).then(function (res) {\n      // debug(res);\n      // console.log(res)\n      return res.data.data as socialTask;\n    })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n    return taskInfo;\n  }\n  /**\n   * get social task keywords\n   * @param taskId \n   * @returns \n   */\n  async Gettaskkeywords(taskId: number): Promise<Array<string>> {\n    const taskInfo = this._httpClient.get(\n      \"/api/taskkeyword?task_id=\" + taskId,\n    ).then(function (res) {\n      // debug(res);\n      // console.log(res)\n      const keywords: Array<string> = [];\n      const Keyitemarr = res.data.data as Array<keywordItem>;\n      for (const item in Keyitemarr) {\n\n        keywords.push(Keyitemarr[item].keyword)\n      }\n      return keywords;\n    })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n    return taskInfo;\n  }\n  async Updateprocesstime(scropeId: number) {\n    const FormData = require('form-data');\n    const data = new FormData();\n    data.append('id', scropeId);\n\n    await this._httpClient.post(\n      \"/api/updatescrapeprotime\",\n      data,\n    ).then(function (res) {\n      // debug(res);\n      // console.log(res)\n      // return res.data.data as number;\n    })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n  }\n  //login user\n  async Login(username: string, password: string): Promise<jwtUser> {\n    // const FormData = require('form-data');\n    var data = new FormData();\n    data.append('username', username);\n    data.append('password', password);\n    console.log(Array.from(data));\n    const thisobj = this\n\n    const loginInfo = await this._httpClient.post(\n      \"/user/login\",\n      data, \n    ).then(function (res) {\n      // if (res.status != 200) {\n      //   throw new Error(res.statusText);\n      // }\n      if (!res.status) {\n        throw new Error(res.msg);\n      }\n      //decode jwt token\n      const decoded = thisobj.ValidateToken(res.data.Token);\n      if (decoded.account_id > 0) {\n        const tokenModel = new Token()\n        tokenModel.setValue(thisobj.tokenname, res.data.Token)\n      }\n      return decoded;\n      //return res.data.Token as {token:string};\n    })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n    return loginInfo;\n  }\n  //get user info use token\n  async GetUserInfo(): Promise<jwtUser | null> {\n    const tokenModel = new Token()\n    //console.log(\"token name:\"+this.tokenname)\n\n    const token = await tokenModel.getValue(this.tokenname);\n    //const thisobj=this\n    if (token == null || token.length < 1) {\n      return null;\n    }\n    console.log(\"token is:\" + token)\n\n    const loginInfo = await this._httpClient.get(\n     \"/api/user/info\",\n   ).then(function (res) {\n      // console.log(res);\n      \n      if (res.status == false) {\n        throw new Error(res.msg);\n      }\n\n      //const decoded = thisobj.ValidateToken(token);\n      return res.data;\n      //return res.data.Token as {token:string};\n    })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n    return loginInfo;\n  }\n  //validate jwt token \n  public ValidateToken(token: string): jwtUser {\n    //console.log(token)\n    const decoded = jwt_decode(token) as jwtTokenUser;\n    const jwtuser: jwtUser = {\n      account_id: decoded.AccountId,\n      email: decoded.Email,\n      // token:token,\n      roles: decoded.Roles ? decoded.Roles : [],\n    }\n    return jwtuser;\n  }\n}\n\n","'use strict';\n\nimport {get_ip_data,get_http_headers} from '@/modules/metadata';\nconst debug = require('debug')('se-scraper:Scraper');\nimport { RemoteSource, Linkdata } from \"./remotesource\"\nimport { Page } from 'puppeteer';\nconst appRoot = require('app-root-path');\nconst fs = require('fs');\n// const resolve = require('path').resolve;\nimport * as path from \"path\";\n// import { Scraperdb } from \"../model/scraperdb\"\n// const { spawn } = require('child_process');\nimport { Subject, Observer } from './subject';\n// import {ScrapeVideo} from './social_scraper';\n// export interface ScrapeOptionsPages {\n//     setViewport: Function,\n//     setRequestInterception: Function,\n//     on: Function,\n//     goto: Function,\n//     screenshot: Function,\n//     setBypassCSP: Function,\n//     click: Function,\n//     waitForSelector: Function,\n//     $x: Function,\n//     cookies: Function,\n// }\n// export class ScrapeOptionsPage extends Page{\nexport interface ScrapeVideo{\n    scrapeinfo:Linkdata,\n    video:VideoInfo,\n}    \nexport interface VideoInfo{\n    url:string,\n    localpath:string,\n    title:string,\n    description:string|undefined,\n    language:string\n}\n// }\n// export class Elementhands extends puppeteer.ElementHandle{}\nexport interface ScrapeOptions {\n    config: {\n        logger: logType,\n        search_engine?: string, keywords?: Array<string>, proxy?: string, apply_evasion_techniques?: boolean, block_assets?: boolean, test_evasion?: boolean, log_http_headers?: boolean, log_ip_address?: boolean\n    },\n    context?: object,\n    pluggable?: object,\n    page?: Page,\n    taskid?: number,\n    // platform:string\n}\n\ninterface runParameter {\n    page?: Page,\n    data?: object,\n    worker?: object\n}\ninterface logType {\n    info: Function,\n    error: Function\n}\n\nexport interface WosearchObj {\n    page?: Page,\n    worker?: object\n}\n\nexport interface Linkurl {\n    title: string,\n    link: string,\n    lang: string,\n    taskid?: number\n}\nexport type Searchobject = {\n    page?: Page,\n    keyword: string | Array<string>\n    cookiesPath?: string\n}\n\n\n\n/**\n * this is parent class for social scrapyer node\n *  */\nexport class SocialScraper implements Subject {\n    config: {\n        logger: logType,\n        search_engine?: string,\n        keywords?: Array<string>,\n        proxy?: string,\n        apply_evasion_techniques?: boolean,\n        block_assets?: boolean,\n        test_evasion?: boolean,\n        log_http_headers?: boolean,\n        log_ip_address?: boolean\n        tmppath?: string,\n        taskid?: number\n        // obj:puppeteer.Page\n    };\n    page: Page;\n    last_response: object | null;\n    metadata: { http_headers?: object, ipinfo?: { ip: string }, scraping_detected?: boolean };\n    pluggable?: object;\n    context?: object;\n    logger: logType;\n    proxy: string;\n    keywords: Array<string>;\n    STANDARD_TIMEOUT: number;\n    SOLVE_CAPTCHA_TIME: number;\n    results: object;\n    result_rank: number;\n    num_requests: number;\n    num_keywords: number;\n    taskid?: number;\n    private observers: Observer[] = [];\n    constructor(options: ScrapeOptions) {\n\n        // debug('constructor');\n        // debug(options);\n        // const {\n        //     // config = {},\n        //     context = {},\n        //     // pluggable = null,\n        //     page = null,\n        //     // browsers=null\n        // } = options;\n        // this.browser=browser;\n        if(options.page){\n        this.page = options.page;\n        }\n        this.last_response = null; // the last response object\n        this.metadata = {\n            scraping_detected: false,\n        };\n        this.pluggable = options.pluggable;\n        this.config = options.config;\n        this.logger = this.config.logger;\n        this.context = options.context;\n        if(options.config.proxy){\n        this.proxy = options.config.proxy;\n        }\n        if(options.config.keywords){\n        this.keywords = options.config.keywords;\n        }\n        if (options.taskid) {\n            this.taskid = options.taskid;\n        }\n        this.STANDARD_TIMEOUT = 10000;\n        this.SOLVE_CAPTCHA_TIME = 45000;\n\n        this.results = {};\n        this.result_rank = 1;\n        // keep track of the requests done\n        this.num_requests = 0;\n        // keep track of the keywords searched\n        this.num_keywords = 0;\n\n        let settings = this.config[`${this.config.search_engine}_settings`];\n        if (settings) {\n            if (typeof settings === 'string') {\n                settings = JSON.parse(settings);\n                this.config[`${this.config.search_engine}_settings`] = settings;\n            }\n        }\n    }\n\n    /**\n     * The subscription management methods.\n     */\n    public attach(observer: Observer): void {\n        const isExist = this.observers.includes(observer);\n        if (isExist) {\n            return console.log('Subject: Observer has been attached already.');\n        }\n\n        console.log('Subject: Attached an observer.');\n        this.observers.push(observer);\n    }\n\n    public detach(observer: Observer): void {\n        const observerIndex = this.observers.indexOf(observer);\n        if (observerIndex === -1) {\n            return console.log('Subject: Nonexistent observer.');\n        }\n\n        this.observers.splice(observerIndex, 1);\n        console.log('Subject: Detached an observer.');\n    }\n\n    /**\n     * Trigger an update in each subscriber.\n     */\n    public notify(type:string,data:ScrapeVideo): void {\n        console.log('Subject: Notifying observers...');\n        for (const observer of this.observers) {\n            observer.update(type,data);\n        }\n    }\n\n    /**\n     * login social media platform\n     * @param runobj \n     * \n     */\n    async runLogin(runobj: runParameter) {\n\n        debug('worker=%o', runobj.worker, this.config.keywords);\n\n        if (runobj.page) {\n            this.page = runobj.page;\n        }\n\n        await this.page?.setViewport({ width: 1280, height: 800 });\n\n\n        await this.load_browser_engine();\n        await this.makeloginaction()\n\n    }\n\n    /**\n     * Action that runs only once in the beginning of the\n     * scraping procedure.\n     *\n     * @returns {Promise<void>} true if everything is correct.\n     */\n    async load_browser_engine(): Promise<void> {\n\n        if (this.config.apply_evasion_techniques === true) {\n            // prevent detection by evading common detection techniques\n            await evadeChromeHeadlessDetection(this.page);\n        }\n\n        // block some assets to speed up scraping\n        if (this.config.block_assets === true) {\n            await this.page.setRequestInterception(true);\n            this.page.on('request', (req) => {\n                const type = req.resourceType();\n                const block = ['stylesheet', 'font', 'image', 'media'];\n                if (block.includes(type)) {\n                    req.abort();\n                } else {\n                    req.continue();\n                }\n            });\n        }\n\n        if (this.config.test_evasion === true) {\n            // Navigate to the page that will perform the tests.\n            const testUrl = 'https://bot.sannysoft.com';\n            await this.page.goto(testUrl);\n            // Save a screenshot of the results.\n            await this.page.screenshot({ path: 'headless-evasion-result.png' });\n        }\n\n        if (this.config.log_http_headers === true) {\n            this.metadata.http_headers = await get_http_headers(this.page);\n            // debug('this.metadata.http_headers=%O', this.metadata.http_headers);\n        }\n\n        if (this.config.log_ip_address === true) {\n            const ipinfo = await get_ip_data(this.page);\n            this.metadata.ipinfo = ipinfo;\n            // debug('this.metadata.ipinfo', this.metadata.ipinfo);\n        }\n\n        // check that our proxy is working by confirming\n        // that ipinfo.io sees the proxy IP address\n        if (this.proxy && this.config.log_ip_address === true) {\n            debug(`${this.metadata.ipinfo?.ip} vs ${this.proxy}`);\n\n            // if the ip returned by ipinfo is not a substring of our proxystring, get the heck outta here\n            if (this.metadata.ipinfo?.ip && (!this.proxy.includes(this.metadata.ipinfo?.ip))) {\n                throw new Error(`Proxy output ip ${this.proxy} does not match with provided one`);\n            } else {\n                this.logger.info(`Using valid Proxy: ${this.proxy}`);\n            }\n\n        }\n\n        return await this.load_start_page();\n    }\n    /**\n  *\n  * @returns true if startpage was loaded correctly.\n  */\n    async load_login_page() {\n\n    }\n    /**\n    *\n    * @returns true if startpage was loaded correctly.\n    */\n    async load_start_page() {\n\n    }\n    /**\n     * make login action\n     */\n    async makeloginaction(): Promise<any | boolean> {\n\n    }\n    /**\n     * user login by their hand\n     */\n    async userloginaction() {\n\n    }\n\n    async searchdata(seachobj: Searchobject): Promise<any | Array<Linkurl>> {\n\n    }\n\n    /**\n     * use worker to search data\n     * @param object keyword \n     */\n    async workersearchdata(workerseach: WosearchObj) {\n        if (workerseach.worker) {\n            debug('worker=%o', workerseach.worker, this.config.keywords);\n        }\n        if (workerseach.page) {\n            this.page = workerseach.page;\n        }\n\n        await this.page.setViewport({ width: 1280, height: 800 });\n        await this.load_browser_engine()\n        if(!this.config.keywords){\n            console.error(\"keyword is empty\");\n            return\n        }\n        const links = await this.searchdata({ keyword: this.config.keywords })\n        \n        const remoteSourmodel = new RemoteSource();\n        // debug('links=%o',links)\n        //handle the links\n        links?.map(async linkItem => {\n            const linkobj: Linkdata = { title: linkItem.title, url: linkItem.link, lang: linkItem.lang, socialtask_id: linkItem.taskid }\n            // debug(linkobj)\n            try {\n                await remoteSourmodel.saveLinkremote(linkobj)\n            } catch (error) {\n                console.error(error);\n            }\n        })\n\n    }\n    /**\n     * download video\n     */\n    async downloadvideo(list: Array<Linkdata>): Promise<void> {\n\n        const currentdate = new Date();\n        const datetime = currentdate.getFullYear() + \"-\"\n            + (currentdate.getMonth() + 1) + \"-\"\n            + (currentdate.getDate());\n        const videosavepath: string = path.resolve(appRoot + \"/tmp/video/\" + datetime + \"/\");\n        if (!fs.existsSync(videosavepath)) {\n            fs.mkdirSync(videosavepath, { recursive: true });\n        }\n        // debug('linklist=%o',list)\n        //debug(list)\n        //const scraperDb = Scraperdb.getInstance();\n        list.forEach(async (linkItem, index) => {\n            // console.log(linkItem)\n            // console.log(index)\n            // const lt=linkItem as Linkdata\n            // console.log(lt.id)\n            debug(linkItem)\n            // console.log(Object.getPrototypeOf(linkItem))\n            const videoArray = await this.downloadSigleVideo(linkItem.url, videosavepath)\n            if (videoArray) {\n\n                for (let i = 0; i < videoArray.length; i++) {\n                    //    console.log(videoArray[i])\n                    const videoItem:VideoInfo={url:linkItem.url,localpath:videoArray[i],title:linkItem.title,description:linkItem.content,language:linkItem.lang}\n                    const scrapeitem:ScrapeVideo={video:videoItem,scrapeinfo:linkItem}\n                    //scraperDb.saveVideo(linkItem.url, videoArray[i], linkItem.title, linkItem.content, linkItem.lang)\n                    this.notify(\"downloadvideoend\",scrapeitem);\n                }\n            }\n        })\n    }\n    /**\n     * download single video\n     * @param string link \n     * @param string videopath \n     */\n    async downloadSigleVideo(link: string, videopath: string): Promise<Array<string> | void> {\n\n    }\n\n\n}\n// This is where we'll put the code to get around the tests.\nasync function evadeChromeHeadlessDetection(page) {\n\n    // Pass the Webdriver Test.\n    await page.evaluateOnNewDocument(() => {\n        // const newProto = navigator.__proto__;\n        const newProto = Object.getPrototypeOf(navigator);\n        delete newProto.webdriver;\n        // navigator.__proto__ = newProto;\n        Object.setPrototypeOf(navigator, newProto);\n    });\n\n    // Pass the Chrome Test.\n    await page.evaluateOnNewDocument(() => {\n        // interface mockObjType extends typeof chrome {\n        //     chrome: object,\n        // }\n        // We can mock this in as much depth as we need for the test.\n        const mockObj = {\n            app: {\n                isInstalled: false,\n            },\n            webstore: {\n                onInstallStageChanged: {},\n                onDownloadProgress: {},\n            },\n            runtime: {\n                PlatformOs: {\n                    MAC: 'mac',\n                    WIN: 'win',\n                    ANDROID: 'android',\n                    CROS: 'cros',\n                    LINUX: 'linux',\n                    OPENBSD: 'openbsd',\n                },\n                PlatformArch: {\n                    ARM: 'arm',\n                    X86_32: 'x86-32',\n                    X86_64: 'x86-64',\n                },\n                PlatformNaclArch: {\n                    ARM: 'arm',\n                    X86_32: 'x86-32',\n                    X86_64: 'x86-64',\n                },\n                RequestUpdateCheckStatus: {\n                    THROTTLED: 'throttled',\n                    NO_UPDATE: 'no_update',\n                    UPDATE_AVAILABLE: 'update_available',\n                },\n                OnInstalledReason: {\n                    INSTALL: 'install',\n                    UPDATE: 'update',\n                    CHROME_UPDATE: 'chrome_update',\n                    SHARED_MODULE_UPDATE: 'shared_module_update',\n                },\n                OnRestartRequiredReason: {\n                    APP_UPDATE: 'app_update',\n                    OS_UPDATE: 'os_update',\n                    PERIODIC: 'periodic',\n                },\n            },\n        };\n        // if(window.navigator.chrome){\n        // window.navigator.chrome = mockObj;\n        // }\n        // window.chrome = mockObj;\n    });\n\n    // //Pass the Permissions Test.\n    // await page.evaluateOnNewDocument(() => {\n    //     const originalQuery = window.navigator.permissions.query;\n    //     // window.navigator.permissions.__proto__.query = parameters =>\n    //     Object.getPrototypeOf(window.navigator.permissions).query = parameters =>\n\n    //         parameters.name === 'notifications'\n    //             ? Promise.resolve({ state: Notification.permission })\n    //             : originalQuery(parameters);\n\n    //     // Inspired by: https://github.com/ikarienator/phantomjs_hide_and_seek/blob/master/5.spoofFunctionBind.js\n    //     const oldCall = Function.prototype.call;\n\n    //     function call() {\n            \n    //         return oldCall.apply(this, arguments);\n    //     }\n\n    //     Function.prototype.call = call;\n\n    //     const nativeToStringFunctionString = Error.toString().replace(/Error/g, \"toString\");\n    //     const oldToString = Function.prototype.toString;\n\n    //     function functionToString() {\n    //         if (this === window.navigator.permissions.query) {\n    //             return \"function query() { [native code] }\";\n    //         }\n    //         if (this === functionToString) {\n    //             return nativeToStringFunctionString;\n    //         }\n    //         return oldCall.call(oldToString, this);\n    //     }\n\n    //     Function.prototype.toString = functionToString;\n    // });\n\n    // Pass the Plugins Length Test.\n    await page.evaluateOnNewDocument(() => {\n        // Overwrite the `plugins` property to use a custom getter.\n        Object.defineProperty(navigator, 'plugins', {\n            // This just needs to have `length > 0` for the current test,\n            // but we could mock the plugins too if necessary.\n            get: () => [1, 2, 3, 4, 5]\n        });\n    });\n\n    // Pass the Languages Test.\n    await page.evaluateOnNewDocument(() => {\n        // Overwrite the `plugins` property to use a custom getter.\n        Object.defineProperty(navigator, 'languages', {\n            get: () => ['en-US', 'en']\n        });\n    });\n\n    // Pass the iframe Test\n    await page.evaluateOnNewDocument(() => {\n        Object.defineProperty(HTMLIFrameElement.prototype, 'contentWindow', {\n            get: function () {\n                return window;\n            }\n        });\n    });\n\n    // Pass toString test, though it breaks console.debug() from working\n    await page.evaluateOnNewDocument(() => {\n        window.console.debug = () => {\n            return null;\n        };\n    });\n}","'use strict';\n// import {cheerio} from 'cheerio';\nimport { SocialScraper as Scraper,ScrapeOptions} from './social_scraper';\n\nexport class FacebookScraper extends Scraper {\n\n    constructor(args: ScrapeOptions) {\n        super(args);\n    }\n \n\n    async load_login_page():Promise<void> {\n        const startUrl = 'https://www.facebook.com';\n\n        // if (this.config.facebook_settings) {\n        //     startUrl = `https://www.${this.config.facebook_settings.facebook_domain}`;\n        //     if (this.config.facebook_settings.facebook_domain) {\n        //         startUrl = `https://www.${this.config.facebook_settings.facebook_domain}`;\n        //     } else {\n        //         startUrl = `https://www.facebook.com`;\n        //     }\n\n        //     for (var key in this.config.facebook_settings) {\n        //         if (key !== 'facebook_domain') {\n        //             startUrl += `${key}=${this.config.facebook_settings[key]}&`\n        //         }\n        //     }\n        // }\n\n        this.logger.info('Using loginUrl: ' + startUrl);\n\n        this.last_response = await this.page.goto(startUrl);\n\n        //await this.page.waitForSelector('input[name=\"q\"]', { timeout: this.STANDARD_TIMEOUT });\n\n        // return true;\n    }\n    //user login by hand\n    async userloginaction(){\n\n    }\n\n}\n\n\n","'use strict';\n\n// const cheerio = require('cheerio');\nimport {SocialScraper as Scraper,ScrapeOptions} from './social_scraper';\nconst fs = require('fs');\n\nexport class YoutubeScraper extends Scraper {\n\n    constructor(args: ScrapeOptions) {\n        super(args);    \n    }\n\n\n    async load_login_page() {\n        \n        const startUrl = 'https://www.youtube.com';\n\n        this.logger.info('Using loginUrl: ' + startUrl);\n        await this.page.setBypassCSP(true);\n        this.last_response = await this.page.goto(startUrl);\n        \n        //hidden icon\n        await this.page.evaluate(() => {\n        const icon = document.getElementById(\"logo-icon\");\n        if(icon){\n        icon.style.display = \"none\";\n        }\n        });\n        console.log(this.config.tmppath)\n        //await this.page.waitForSelector('input[name=\"q\"]', { timeout: this.STANDARD_TIMEOUT });\n        //await for user to take action\n        await this.page.waitForSelector('#avatar-btn',{'timeout':0});\n        //user has success login\n        //save cookies \n        const cookies = await this.page.cookies();\n        \n        await fs.writeFile(this.config.tmppath+'/cookies.json', JSON.stringify(cookies, null, 2));\n        // await browser.close();\n        // return true;\n    }\n\n\n\n}\n\nmodule.exports = {\n    YoutubeScraper: YoutubeScraper,\n};\n","const fs = require(\"fs\");\nconst crypto = require(\"crypto\");\nconst http = require(\"http\");\nconst https = require(\"https\");\nconst progress = require(\"progress-stream\");\nconst fetch =require(\"node-fetch\");\nconst debug = require(\"debug\")(\"bilibili-download\");\nconst debugerror = debug('app:error');\nexport interface getAiddata {\n\tvideoData: {\n\t\taid: number;\n\t\tpages: Array<{\n\t\t\tcid: number;\n\t\t}>;\n\t};\n\n\tepInfo: {\n\t\taid: number;\n\t\tcid: number;\n\t}\n\tepList: Array<{\n\t\taid: number;\n\t\tcid: number;\n\t}>;\n}\ntype Durldata = {\n\turl: string;\n\torder: string;\n\tlength: string;\n\tsize: string;\n}\ntype Targetresult = {\n\tdurl: Array<Durldata>;\n\tquality: string;\n}\nexport type Videodata = {\n\tdata: {\n\t\ttitle: string;\n\t}\n}\nclass Task {\n\turl: string;\n\tfinished: boolean;\n\tconstructor(url) {\n\t\tthis.url = url;\n\t\tthis.finished = false;\n\t}\n}\n\n\nexport class Downloader {\n\ttype: string;\n\tid: string;\n\turl: string;\n\taid: number;\n\tpid: number;\n\tcid: number;\n\tname: string;\n\tlinks: Array<string>;\n\ttasks: Array<Task>;\n\n\tconstructor() {\n\t\tthis.type = \"\";\n\t\tthis.id = \"\";\n\t\tthis.url = \"\";\n\t\tthis.aid = -1;\n\t\tthis.pid = 1;\n\t\tthis.cid = -1;\n\t\tthis.name = \"\";\n\t\tthis.links = [];\n\t\tthis.tasks = [];\n\t}\n\n\tgetVideoUrl(videoUrl: string): void {\n\t\tif(!videoUrl){\n\t\t\tthrow new Error(\"video url is empty\");\n\t\t} \n\t\tthis.url = \"\";\n\t\tconst mapping = {\n\t\t\t\"BV\": \"https://www.bilibili.com/video/\",\n\t\t\t\"bv\": \"https://www.bilibili.com/video/\",\n\t\t\t\"av\": \"https://www.bilibili.com/video/\",\n\t\t\t\"ep\": \"https://www.bilibili.com/bangumi/play/\",\n\t\t\t\"ss\": \"https://www.bilibili.com/bangumi/play/\"\n\t\t};\n\t\tfor (const [key, value] of Object.entries(mapping)) {\n\t\t\tif (videoUrl.includes(key)) {\n\t\t\t\tthis.type = key;\n\t\t\t\tthis.id = key + videoUrl.split(key)[1];\n\t\t\t\tthis.url = value + this.id;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getAid() {\n\t\tconst { type, url } = this;\n\t\tif (!url) return;\n\t\treturn fetch(url)\n\t\t\t.then(response => response.text())\n\t\t\t.then(result => {\n\t\t\t\tconst data = result.match(/__INITIAL_STATE__=(.*?);\\(function\\(\\)/)[1];\n\t\t\t\t// data =  cast(JSON.parse(data),r(\"User\"));\n\t\t\t\tconst aiddata: getAiddata = JSON.parse(data)\n\t\t\t\t//debug(\"INITIAL STATE\", data);\n\t\t\t\tif (type === \"BV\" || type === \"bv\" || type === \"av\") {\n\t\t\t\t\tthis.aid = aiddata.videoData.aid;\n\t\t\t\t\tthis.pid = parseInt(url.split(\"p=\")[1], 10) || 1;\n\t\t\t\t\tthis.cid = aiddata.videoData.pages[this.pid - 1].cid;\n\t\t\t\t}\n\t\t\t\telse if (type === \"ep\") {\n\t\t\t\t\tthis.aid = aiddata.epInfo.aid;\n\t\t\t\t\tthis.cid = aiddata.epInfo.cid;\n\t\t\t\t}\n\t\t\t\telse if (type === \"ss\") {\n\t\t\t\t\tthis.aid = aiddata.epList[0].aid;\n\t\t\t\t\tthis.cid = aiddata.epList[0].cid;\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(\n\t\t\t\t// error => showError(\"获取视频 aid 出错！\")\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// console.error(error);\n\t\t\t\t\tthrow new Error(\"get video aid error\");\n\t\t\t\t}\n\t\t\t);\n\t}\n\n\tasync getInfo(): Promise<Videodata> {\n\t\tconst { aid, cid } = this;\n\t\tif (!cid) {\n\t\t\tthrow new Error(\"get video cid error\");\n\t\t\t// showError(\"获取视频 cid 出错！\");\n\t\t\t// return;\n\t\t}\n\t\t// getDanmaku(); //获取cid后，获取下载链接和弹幕信息\n\t\treturn fetch(\"https://api.bilibili.com/x/web-interface/view?aid=\" + aid)\n\t\t\t.then(response => response.json() as Promise<Videodata>)\n\t\t\t.catch(\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// console.error(error);\n\t\t\t\t\tthrow new Error(\"get video info error\");\n\t\t\t\t}\n\t\t\t\t// error => showError(\"获取视频信息出错！\")\n\t\t\t);\n\t}\n\n\tasync getData(fallback = false) {\n\t\tconst { cid, type } = this;\n\t\tlet playUrl;\n\t\tif (fallback) {\n\t\t\tconst params = `cid=${cid}&module=movie&player=1&quality=112&ts=1`;\n\t\t\tconst sign = crypto.createHash(\"md5\").update(params + \"9b288147e5474dd2aa67085f716c560d\").digest(\"hex\");\n\t\t\tplayUrl = `https://bangumi.bilibili.com/player/web_api/playurl?${params}&sign=${sign}`;\n\t\t} else {\n\t\t\tif (type === \"BV\" || type === \"bv\" || type === \"av\") {\n\t\t\t\tconst params = `appkey=iVGUTjsxvpLeuDCf&cid=${cid}&otype=json&qn=112&quality=112&type=`;\n\t\t\t\tconst sign = crypto.createHash(\"md5\").update(params + \"aHRmhWMLkdeMuILqORnYZocwMBpMEOdt\").digest(\"hex\");\n\t\t\t\tplayUrl = `https://interface.bilibili.com/v2/playurl?${params}&sign=${sign}`;\n\t\t\t} else {\n\t\t\t\tplayUrl = `https://api.bilibili.com/pgc/player/web/playurl?qn=80&cid=${cid}`;\n\n\t\t\t}\n\t\t}\n\t\treturn fetch(playUrl)\n\t\t\t.then(response => response.text())\n\t\t\t.then(result => {\n\t\t\t\tconst data = fallback ? this.parseData(result) : JSON.parse(result);\n\t\t\t\tconst target = data.durl || data.result.durl;\n\t\t\t\t// console.log(\"PLAY URL\", data);\n\t\t\t\tif (target) {\n\t\t\t\t\tthis.links = target.map(part => part.url);\n\t\t\t\t\treturn {\n\t\t\t\t\t\tfallback, data\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tif (fallback) throw Error();\n\t\t\t\t\treturn this.getData(true);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// console.error(error);\n\t\t\t\t\tthrow new Error(\"get playUrl or download link error\");\n\t\t\t\t}\n\t\t\t\t// \terror => {\n\t\t\t\t// \t// showError(\"获取 PlayUrl 或下载链接出错！由于B站限制，只能下载低清晰度视频。\");\n\t\t\t\t// }\n\t\t\t);\n\t}\n\n\tparseData(target) {\n\t\tconst data = $(target);\n\t\tconst result: Targetresult = { durl: [], quality: \"\" };\n\t\tresult.durl = [];\n\t\tresult.quality = data.find(\"quality\").text();\n\t\tdata.find(\"durl\").each((i, o) => {\n\t\t\tconst part = $(o);\n\t\t\tresult.durl.push({\n\t\t\t\turl: part.find(\"url\").text(),\n\t\t\t\torder: part.find(\"order\").text(),\n\t\t\t\tlength: part.find(\"length\").text(),\n\t\t\t\tsize: part.find(\"size\").text()\n\t\t\t});\n\t\t});\n\t\treturn result;\n\t}\n\n\tdownloadByIndex(part, file, callback = (progress: any, index: any) => { }) {\n\t\tconst { url } = this;\n\n\t\tif (this.tasks.some(item => item.url === this.links[part])) return \"DUPLICATE\";\n\t\tthis.tasks.push(new Task(this.links[part]));\n\t\tlet state;\n\t\ttry {\n\t\t\tstate = fs.statSync(file);\n\t\t}\n\t\tcatch (error) {\n\t\t}\n\t\tconst options = {\n\t\t\turl: this.links[part],\n\t\t\theaders: {\n\t\t\t\t\"Range\": `bytes=${state ? state.size : 0}-`, //断点续传\n\t\t\t\t\"User-Agent\": \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36\",\n\t\t\t\t\"Referer\": url\n\t\t\t}\n\t\t};\n\t\tconst stream = fs.createWriteStream(file, state ? { flags: \"a\" } : {});\n\t\tthis.download(options, stream, callback);\n\n\t\treturn state;\n\t}\n\n\tdownload(options, stream, callback) {\n\t\t// https://www.npmjs.com/package/progress-stream\n\t\tconst index = this.tasks.findIndex(item => item.url === options.url);\n\t\tconst proStream = progress({\n\t\t\ttime: 250 //单位ms\n\t\t}).on(\"progress\", progress => {\n\t\t\tconst { percentage } = progress; //显示进度条\n\t\t\tif (percentage === 100) {\n\t\t\t\tthis.tasks[index].finished = true;\n\t\t\t}\n\t\t\tcallback(progress, index);\n\t\t});\n\n\t\tconst { url } = options;\n\t\tfunction downloadLink(url) {\n\t\t\t(url.startsWith(\"https\") ? https : http).get(url, options, res => {\n\t\t\t\tif (res.statusCode === 302) {\n\t\t\t\t\turl = res.headers.location;\n\t\t\t\t\treturn downloadLink(url);\n\t\t\t\t}\n\t\t\t\tproStream.setLength(res.headers[\"content-length\"]);\n\t\t\t\t//先pipe到proStream再pipe到文件的写入流中\n\t\t\t\tres.pipe(proStream).pipe(stream).on(\"error\", error => {\n\t\t\t\t\tdebugerror(error);\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\tdownloadLink(url);\n\t}\n}\n\nmodule.exports = { Task, Downloader };\n","const path = require(\"path\");\nexport type queryParams = {\n    page: number,\n    size: number,\n    sortby: string,\n    search: string,\n  }\n//scroll down to the bottom of the page\nexport async function autoScroll(page){\n    await page.evaluate(async () => {\n        await new Promise((resolve) => {\n            let totalHeight = 0;\n            const distance = 100;\n            var timer = setInterval(() => {\n                const scrollHeight = document.body.scrollHeight;\n                window.scrollBy(0, distance);\n                totalHeight += distance;\n\n                if(totalHeight >= scrollHeight - window.innerHeight){\n                    clearInterval(timer);\n                    resolve(void(0));\n                }\n            }, 100);\n        });\n    });\n}\nexport function delay(time) {\n    return new Promise(function(resolve) { \n        setTimeout(resolve, time)\n    });\n}\n//get record date string for local db\nexport function getRecorddatetime():string{\n    const date = new Date();\n    \n    return date.getFullYear().toString() +\n      \"-\" +\n      pad2(date.getMonth() + 1) +\n      \"-\" +\n      pad2(date.getDate()) +\n      \" \" +\n      pad2(date.getHours()) +\n      \":\" +\n      pad2(date.getMinutes()) +\n      \":\" +\n      pad2(date.getSeconds());  \n}\nexport function pad2(n: number): string {\n    if (n < 10) {\n      return \"0\" + n.toString();\n    } else {\n      return n.toString();\n    }\n  }\n//return date string\nexport function getdate():string{\n    const date = new Date();\n    \n    return date.getFullYear().toString() +\n      \"-\" +\n      pad2(date.getMonth() + 1) +\n      \"-\" +\n      pad2(date.getDate()) +\n      \" \" +\n      pad2(date.getHours()) +\n      \":\" +\n      pad2(date.getMinutes()) +\n      \":\" +\n      pad2(date.getSeconds());  \n}\n\n\nexport function getUserhome():string|undefined{\n    switch(process.platform) {\n        case 'darwin': {\n          return path.join(process.env.HOME, 'Library', 'Application Support');\n        }\n        case 'win32': {\n          return process.env.APPDATA;\n        }\n        case 'linux': {\n          return process.env.HOME;\n        }\n      }\n      return undefined;\n}\nexport function getApplogpath():string|undefined{\n    const userPath=getUserhome()\n    if(!userPath){\n        return undefined\n    }\n    const appname=\"social-marketing\"\n    return path.join(process.env.HOME, appname, 'log');\n}\n\nexport const hash = Math.floor(Math.random() * 90000) + 10000;\n// module.exports = {\n//     autoScroll:autoScroll,\n//     delay:delay,\n//     getRecorddate:getRecorddate\n// }","\"use strict\";\n\nconst cheerio = require(\"cheerio\");\nimport { SocialScraper as Scraper, Linkurl, ScrapeOptions, Searchobject } from \"./social_scraper\";\nconst fs = require(\"fs\");\nimport { Downloader } from \"@/modules/bilibili/downloader\";\nconst path = require(\"path\");\nconst sanitize = require(\"filenamify\");\nconst debug = require(\"debug\")(\"bilibili-scraper\");\nimport { autoScroll, delay } from \"@/modules/lib/function\";\nimport { ElementHandle, Page, } from 'puppeteer';\nconst debugerror = debug('app:error');\n\ntype clickbtnserobj = {\n  page: Page,\n  keyword: string\n}\n// import filenamify from 'filenamify';\n// const { launch, getStream } = require(\"puppeteer-stream\");\n// const PuppeteerVideoRecorder = require('puppeteer-video-recorder');\nexport class BilibiliScraper extends Scraper {\n  startUrl: string;\n\n  constructor(args: ScrapeOptions) {\n    super(args);\n    this.startUrl = \"https://www.bilibili.com\";\n    // console.log(this.taskid)\n    // debug(self.taskid)\n  }\n  async load_start_page(): Promise<void> {\n    debug(\"load start page\")\n\n  }\n  //login into bilibili\n  async makeloginaction(): Promise<boolean> {\n    // let startUrl = \"https://www.bilibili.com\";\n\n    this.logger.info(\"Using loginUrl: \" + this.startUrl);\n    await this.page.setBypassCSP(true);\n    this.last_response = await this.page.goto(this.startUrl);\n\n    debug(\n      \"login success, cookies has been save at \" + this.config.tmppath\n    );\n    //click login btn\n    await this.page.click(\".header-login-entry\");\n    // await this.page.evaluate(_ => {\n    // var icon = document.getElementById(\"logo\");\n    // icon.style.display = \"none\";\n    // });\n    //wait login box show\n    await this.page.waitForSelector(\".bili-mini-content-wp\", {\n      timeout: this.STANDARD_TIMEOUT,\n    });\n    \n    //click login by sms\n    const button = await this.page.$(\"//div[contains(., ' 短信登录 ')]\");\n    if (button) {\n      await (button as ElementHandle<Element>).click();\n    }\n    //await for user to take action\n    await this.page.waitForSelector(\".header-entry-mini\", { timeout: 0 });\n    //user has success login\n    //save cookies\n    const cookies = await this.page.cookies();\n\n    await fs.writeFile(\n      this.config.tmppath + \"/cookies.json\",\n      JSON.stringify(cookies, null, 2),\n      (err) => {\n        if (err) {\n          debugerror(err);\n        }\n      }\n    );\n    await this.page.close();\n    // await this.browsers.close();\n    return true;\n  }\n\n  /**\n   * get video list page\n   * @param {object} page\n   * @param {string} keyword\n   * @returns element\n   */\n  async clickSearchbtn(searobj: clickbtnserobj): Promise<ElementHandle<Element> | null> {\n    if (searobj.page) {\n      this.page = searobj.page;\n    }\n\n    this.logger.info(\"Using loginUrl: \" + this.startUrl);\n    await this.page.setBypassCSP(true);\n    this.last_response = await this.page.goto(this.startUrl);\n    await this.page.type(\".nav-search-input\", searobj.keyword);\n    // await this.page.$eval(\".nav-search-input\", function (keyword) {\n    //   this.value = keyword;\n    // });\n    // await page.$eval('.nav-search-input', el => el.value = \"\");\n    const searchbtn = await this.page.$(\".nav-search-btn\");\n    if (searchbtn) {\n      await searchbtn.click();\n    }\n    return searchbtn;\n  }\n  /**\n   *\n   * @param {object} page\n   * @param {string} keyword\n   * @returns array\n   */\n  async searchdata(searobj: Searchobject): Promise<Array<object>> {\n    if (searobj.page) {\n      this.page = searobj.page;\n    }\n    const result: Array<object> = []\n    if (Array.isArray(searobj.keyword)) {\n      for (const element of searobj.keyword) {\n        const subsearobg: Searchobject = { page: this.page, keyword: element }\n        const linkres = await this.getVideourls(subsearobg);\n        if(linkres){\n        for (const link of linkres) {\n          result.push(link)\n        }\n      }\n      }\n\n    } else if (typeof searobj.keyword === 'string') {\n      const sersearobg: Searchobject = { page: this.page, keyword: searobj.keyword }\n      const linkres = await this.getVideourls(sersearobg);\n      if(linkres){\n      for (const link of linkres) {\n\n        result.push(linkres)\n      }\n    }\n    }\n    return result\n    // return await this.getVideourls({ page: this.page, keyword: keyword });\n  }\n  //get video url return in array\n  /**\n   *\n   * @param {object,string,string}\n   * @returns array\n   */\n  async getVideourls(serobj: Searchobject): Promise<Array<Linkurl>|null> {\n    if (serobj.page) {\n      this.page = serobj.page;\n    }\n    if (serobj.cookiesPath) {\n      if (!fs.existsSync(serobj.cookiesPath)) {\n        throw new Error(`Cannot find cookies file at ${serobj.cookiesPath}`);\n      }\n\n      const cookies = JSON.parse(await fs.promises.readFile(serobj.cookiesPath));\n      // console.log(cookies);\n      await this.page.setCookie(...cookies);\n    }\n\n    if (typeof serobj.keyword === 'string') {\n      return await this.handleSearch({ page: this.page, keyword: serobj.keyword })\n    } else {\n      const linkres: Array<Linkurl> = [];\n      for (const keyelement of serobj.keyword) {\n        const res = await this.handleSearch({ page: this.page, keyword: keyelement })\n        if (res) {\n          for (const link of res) {\n            linkres.push(link)\n          }\n        }\n      }\n      return linkres\n    }\n\n  }\n\n  async handleSearch(csobj: clickbtnserobj): Promise<Array<Linkurl> | null> {\n    const searchbtn = await this.clickSearchbtn({\n      page: this.page,\n      keyword: csobj.keyword,\n    });\n\n    const browser = this.page.browser();\n    const newPage = await browser.waitForTarget((target) =>\n      target.url().includes(\"search.bilibili.com\")\n    );\n    const pages = await browser.pages();\n    let searchPage;\n    for (const page of pages) {\n      const pageurl = await page.url(); // new page now appear!\n      // debug(await page.title())\n      if (pageurl.includes(\"search.bilibili.com\")) {\n        searchPage = page;\n        break;\n      }\n    }\n    if (!searchPage) {\n      throw new Error(\"search page not found\");\n    }\n\n    await autoScroll(searchPage);\n\n    try {\n      await searchPage.waitForSelector(\".vui_pagenation\", { timeout: 5000 });\n    } catch (e) {\n      //if (e instanceof Puppeteererror.TimeoutError) {\n        // Do something if this is a timeout in find page\n        debug(\"not find .vui_pagenation item, the page may not have result\")\n        //return empty promise array\n        return new Promise((resolve) => { resolve(null); });\n      //}\n    }\n    const linkres: Array<Linkurl> = [];\n    // await this.page.$$(\"button.vui_button\", elements=>{\n    //   console.log(elements)\n    // })\n    const linkPage = await searchPage.$$(\"button.vui_button\");\n    debug(linkPage);\n    for (let i = 0; i < linkPage.length; i++) {\n\n      await searchPage.evaluate((element) => {\n        element.click();\n      }, linkPage[i]);\n      const links = await this.getVideolistlink({ page: searchPage });\n      debug(links);\n      links.map((link) => {\n        linkres.push(link);\n      });\n    }\n\n\n    return linkres;\n  }\n  /**\n   *\n   * @param {page} page\n   * @returns array\n   */\n  async getVideolistlink({ page }): Promise<Array<Linkurl>> {\n    if (page) {\n      this.page = page;\n    }\n    // const elHandleArray = await page.$$(\n    //   \".bili-video-card__info--right a:nth-child(1)\"\n    // );\n\n    let linkmap: Array<Linkurl> = [];\n    // const that=this;\n    debug(this.config.taskid)\n    let taskids = 0;\n    if (this.config.taskid) {\n      taskids = this.config.taskid\n    }\n    linkmap = await this.page.$$eval(\n      \".bili-video-card__info--right >a:first-child\",\n      (alinks, taskids) => {\n        return alinks.map((alink) => {\n          const linkobg: Linkurl = { title: '', link: '', lang: 'zh-cn' };\n          // if(!that.taskid){\n          // linkobg.taskid=that.taskid;\n          // }\n          if (taskids) {\n            linkobg.taskid = taskids\n          }\n          const herf = alink.getAttribute(\"href\")\n          if (herf) {\n            linkobg.link = herf\n          }\n          // console.log(alink);\n          const htitle = alink.querySelector(\"h3\");\n          if (htitle) {\n            const htres = htitle.getAttribute(\"title\");\n            if (htres) {\n              linkobg.title = htres\n            }\n          }\n          return linkobg;\n        });\n      }, taskids\n    );\n    // debug(\"query link finish\");\n    // debug(linkmap);\n    // debug(\"show link finish\");\n    // console.log(linkmap)\n\n    await linkmap.forEach((element, index) => {\n      if (!element.link.includes(\"/video/\")) {\n        // debug(\"element has video \"+element)\n        linkmap.splice(index, 1);\n      }\n    });\n    await linkmap.forEach((element, index) => {\n      if (element.link.includes(\"/api/\")) {\n        debug(\"element has api \" + element);\n        linkmap.splice(index, 1);\n      }\n    });\n    //debug(\"filter link finish\");\n    debug(linkmap);\n\n    return linkmap;\n  }\n  /**\n   *\n   * @param {object} page\n   * @param {string} link\n   * @param {string} videopath\n   */\n  async downloadSigleVideo(link: string, videopath: string): Promise<Array<string>> {\n    // if (page) {\n    //   this.page = page;\n    // }\n\n    // console.log(link)\n    // await this.page.goto(link,{\n    //   waitUntil: 'domcontentloaded',\n    // });\n    // console.log(videopath)\n    // const file = fs.createWriteStream(videopath + \"/test.webm\");\n    // await page.evaluate(async () => {\n    // const el = document.querySelector('.bpx-player-video-wrap > video:nth-child(1)');\n    // console.log(el);\n    // const {src} = el.querySelector('source');\n    // console.log(src);\n    // });\n    // const html = await page.$eval('#bilibili-player', el => el.outerHTML);\n    // console.log(html)\n    // const src = await page.$eval(\"#bilibili-player video\",el => el.getAttribute(\"src\"))\n    if (!link) {\n      debug(link)\n      throw new Error(\"link is empty\")\n    }\n    const downloader = new Downloader();\n    downloader.getVideoUrl(link);\n    if (!downloader.url) {\n      throw new Error(\"video url invalid\");\n    }\n    await downloader.getAid();\n\n    const videores = await downloader.getInfo();\n    debug(\"VIDEO INFO\", videores);\n    // const downloadPath ='/home/robertzeng/downloadtest';\n    const filename = Math.random().toString(20).slice(2);\n    const { data, fallback } = await downloader.getData();\n\n    const target = data.durl || data.result.durl;\n    const quality = data.quality || data.result.quality,\n      qualityArray = {\n        112: \"1080P+\",\n        80: \"1080P\",\n        74: \"720P60\",\n        64: \"720P\",\n        48: \"720P\",\n        32: \"480P\",\n        16: \"360P\",\n        15: \"360P\",\n      };\n    const videoQuantity = qualityArray[quality] || \"unknown\";\n    debug(\"videoQuantity is \" + videoQuantity);\n    if (fallback) {\n      throw new Error(\"error happen when get video data\");\n    }\n    // debug(\"echo target\");\n    // debug(target);\n    const result: Array<string> = [];\n    target.forEach((element, part) => {\n      const file = path.join(videopath, `${sanitize(filename)}-${part}.flv`);\n      debug(\"part is %o\", part);\n      debug(\"file name %o\", file);\n\n      const state = downloader.downloadByIndex(\n        part,\n        file,\n        (progress, index) => {\n          const { speed, eta, percentage } = progress; //显示进度条\n          // console.log(\"speed: \" + Math.round(speed / 1e3) + \"KB/s\");\n          // console.log(`eta:${eta}s`);\n        }\n      );\n      result.push(file)\n    });\n\n    return result;\n  }\n  /**\n   * get video detail\n   * @param {object} page\n   * @param {string} link\n   */\n  async getVideodetail(page, link) {\n    if (page) {\n      this.page = page;\n    }\n    await this.page.goto(link, {\n      waitUntil: \"domcontentloaded\",\n    });\n\n    // await this.page.waitForSe\n  }\n}\n\nmodule.exports = {\n  BilibiliScraper: BilibiliScraper,\n};\n","'use strict';\nexport { };\nimport * as fs from 'fs';\n// import { todo } from 'node:test';\nconst debug = require('debug')('videoedit');\nimport { spawn } from 'node:child_process';\nimport * as path from 'path';\n\nexport class Videoedit {\n  /**\n   * \n   * @param videoPath \n   * @param startTime \n   * @param endTime \n   */\n  async removeWatermark(videoPath: string, outputpathfile: string, insertId: number | null, callback: Function | undefined|null) {\n    //check video path exist\n    if (!fs.existsSync(videoPath)) {\n      throw new Error(\"video path not exist for the path \"+videoPath);\n    }\n    const outputpath = path.dirname(outputpathfile)\n    //check output path exist\n    if (!fs.existsSync(outputpath)) {\n      //create directory\n      fs.mkdirSync(outputpath, { recursive: true });\n    }\n    const pythonProcess = await spawn('Marketingtool', [\n      '--action', 'removeWatermark', '-f', videoPath, '-o', outputpathfile\n    ]);\n\n    pythonProcess.stdout.on('data', (data) => {\n      debug(`stdout: ${data}`);\n\n    });\n\n    pythonProcess.stderr.on('data', (data) => {\n      debug(`stderr: ${data}`);\n    });\n\n    pythonProcess.on('close', (code) => {\n      debug(`watermark remove child process exited with code ${code}`);\n\n      if (callback && (code == 0)) {\n        debug(\"run callback\")\n        callback(insertId, outputpathfile);\n      } else {\n        //fileter watermark failuer, try to convert the \n        //const convertPath=path.dirname(videoPath)+path.sep+'convert_'+Math.random().toString(16).slice(2)+\".mp4\"\n        const convername = '_convert'\n        if (videoPath.includes(convername)) {\n          //the video has been converted, not need to try again\n          return;\n        } else {\n          debug(\"start convert video\")\n          const convertPath = path.dirname(videoPath) + path.sep + path.parse(videoPath).name +convername+'.mp4'\n          this.convertvideo(videoPath,convertPath,()=>this.removeWatermark(convertPath,outputpathfile,insertId,callback));\n          \n        }\n        // fs.access(convertPath, fs.constants.F_OK, (err) => {\n        //   if (err) {\n        //     debug(\"start convert video\")\n        //     this.convertvideo(videoPath,convertPath);\n        //     this.removeWatermark(convertPath,outputpathfile,insertId,callback)\n        //     return;\n        //   }\n        //   debug('File exists not need convert');\n        //   console.log(\"remove watermark failuer\")\n        // });\n\n      }\n    });\n\n    // const result = pythonProcess.stdout;\n    // // const error = pythonProcess.stderr?.toString()?.trim();\n    // const error = pythonProcess.stderr;\n    // console.log(result)\n    // debug(result)\n    // //check command run success \n    // if(error){\n    //   throw new Error(error)\n    // }\n  }\n  /**\n   * get video captions\n   */\n  async getVideocaptions(videoPath: string, outputPath: string, sourcelang: string, targetlang: string) {\n    if (!fs.existsSync(videoPath)) {\n      throw new Error(\"video path not exist\");\n    }\n    const pythonProcess = await spawn('Marketingtool', [\n      '--action',\n      'translate',\n      '-f', videoPath,\n      '--source-lang', sourcelang,\n      '--target-lang', targetlang\n    ]);\n\n    // const result = pythonProcess.stdout?.toString()?.trim();\n    // const error = pythonProcess.stderr?.toString()?.trim();\n    // debug(result)\n    // if(error){\n    //   throw new Error(error)\n    // }\n  }\n\n  async convertvideo(videoPath: string, outputpathfile: string,callback:Function|undefined) {\n    if (!fs.existsSync(videoPath)) {\n      throw new Error(\"video path not exist\");\n    }\n    //try {\n      const pythonProcess = await spawn('Marketingtool', [\n        '--action',\n        'convertvideo',\n        '-f', videoPath,\n        '-o', outputpathfile,\n      ]);\n    // } catch (error) {\n    //   debug(error)\n    //   throw new Error(error)\n    // }\n    pythonProcess.on('close', (code) => {\n      debug(`convert video child process exited with code ${code}`);\n      if(code!=1){\n        debug(\"convert command failure: Marketingtool --action convertvideo -f \"+videoPath+\" -o \"+outputpathfile )\n      }\n      if(callback&& (code == 0)){\n        callback;\n      }\n    });\n\n  }\n\n\n}\n","import { Database } from 'sqlite3';\nimport * as fs from 'fs';\nconst debug = require(\"debug\")(\"scraperdb\");\nconst appRoot = require('app-root-path');\nimport * as path from 'path';\n\n// import { use } from 'chai';\n// import * as e from 'express';\n\n// const db = new sqlite3.Database('socialmarket.db');\n\n// module.exports = {\n//     db: db,\n// };\n\n\nexport class Scraperdb {\n    private static instance: Scraperdb;\n    dbname: string;\n    db: Database;\n    pathdb: string;\n\n    private constructor() {\n        const dbpath: string = path.resolve(appRoot + \"/tmp/db/\");\n        // debug(dbpath)\n        if (!fs.existsSync(dbpath)) {\n            fs.mkdirSync(dbpath, { recursive: true });\n        }\n        this.dbname = \"scraper.db\";\n        this.pathdb = dbpath + \"/\" + this.dbname\n        // debug(this.dbname)\n        this.db = new Database(this.pathdb, (err) => {\n            if (err) {\n                // console.log(\"Getting error \" + err);\n                throw new Error(\"Getting error \" + err);\n            }\n        });\n    }\n    // deconstructor() {\n    //     this.db.close();\n    // }\n\n    public static getInstance(): Scraperdb {\n        if (!Scraperdb.instance) {\n            Scraperdb.instance = new Scraperdb();\n        }\n        return Scraperdb.instance;\n    }\n    init() {\n        this.createTables();\n    }\n    //get database\n    getdb(): Database {\n        return this.db;\n    }\n    /**\n     * create video table\n     */\n    createTables() {\n        const videotablepath = path.resolve(appRoot + \"/src/sql/scraperdb/\");\n\n        fs.readdir(videotablepath, (err, files) => {\n            debug(files)\n            files.forEach(file => {\n                this.db.exec(fs.readFileSync(videotablepath +path.sep+ file).toString());\n            });\n        });\n    }\n   \n  \n\n    \n    \n\n}\n\n  \n    \n\n\n","import { Scraperdb } from \"./scraperdb\";\nimport { Database } from \"sqlite3\";\nimport { VideoInfo } from \"@/modules/social_scraper\";\nimport {getRecorddatetime} from \"@/modules/lib/function\";\n\nexport class Videodb {\n  db: Database;\n  videoTable = \"video\";\n  videoDescriptionTable = \"video_description\";\n  language: Array<{ id: number; name: string }> = [\n    { id: 1, name: \"en-us\" },\n    { id: 2, name: \"zh-cn\" },\n  ];\n  constructor() {\n    const scraperModel = Scraperdb.getInstance();\n    this.db = scraperModel.getdb();\n  }\n\n\n  /**\n   * save video\n   * @param url string\n   */\n  saveVideo(videoinfo: VideoInfo,callback:Function|undefined|null) {\n    // saveVideo(url: string, localpath:string,title: string, description: string, language: string) {\n    let languageid = 0;\n    for (let i = 0; i < this.language.length; i++) {\n      if (this.language[i].name == videoinfo.language) {\n        languageid = this.language[i].id;\n      }\n    }\n    const date = new Date();\n    const recordtime =getRecorddatetime();\n    // const recordtime =\n    //   date.getFullYear().toString() +\n    //   \"-\" +\n    //   this.pad2(date.getMonth() + 1) +\n    //   \"-\" +\n    //   this.pad2(date.getDate()) +\n    //   \" \" +\n    //   this.pad2(date.getHours()) +\n    //   \":\" +\n    //   this.pad2(date.getMinutes()) +\n    //   \":\" +\n    //   this.pad2(date.getSeconds());\n    const sql =\n      `INSERT INTO ` +\n      this.videoTable +\n      ` (url,localpath,record_time) VALUES (?,?,?)`;\n    const component = this;\n    this.db.run(\n      sql,\n      [videoinfo.url, videoinfo.localpath, recordtime],\n      function (err) {\n        if (err) {\n          throw new Error(\n            err.message + \" url:\" + videoinfo.url + \" recordtime:\" + recordtime\n          );\n        }\n        if (this.lastID) {\n          const sql =\n            `INSERT INTO ` +\n            component.videoDescriptionTable +\n            ` (video_id,language_id,title,description) VALUES (?,?,?,?)`;\n          component.db.run(\n            sql,\n            [this.lastID, languageid, videoinfo.title, videoinfo.description],\n            function (err) {\n              if (err) {\n                throw new Error(err.message);\n              }\n            }\n          );\n          if(callback){\n            callback(this.lastID)\n          }\n        }    \n      }\n    );\n    \n    // this.db.close();\n  }\n  /**\n   * update the video path which watermark has been remove\n   */\n  updateVideofilter(videoId: number, filterpath: string) {\n    const sql =\n      `UPDATE ` + this.videoTable + ` SET filterwatermark = ? WHERE id = ?`;\n    this.db.run(sql, [filterpath, videoId], function (err) {\n      if (err) {\n        throw new Error(err.message);\n      }\n    });\n  }\n  truncatedb() {\n    const sql = `DELETE FROM ` + this.videoTable;\n    this.db.run(sql, [], function (err) {\n      if (err) {\n        throw new Error(err.message);\n      }\n    });\n    const videoscsql = `DELETE FROM ` + this.videoDescriptionTable;\n    this.db.run(videoscsql, [], function (err) {\n      if (err) {\n        throw new Error(err.message);\n      }\n    });\n\n    // this.db.close();\n  }\n}\n","'use strict';\nexport { };\nimport {Observer} from './subject';\nimport {ScrapeVideo} from './social_scraper';\n// import {Scraperdb} from \"../model/scraperdb\";\nimport {RemoteSource} from \"./remotesource\";\nimport {Videoedit} from \"./videoedit\";\nconst debug = require(\"debug\")(\"Observer:videodownloadObserver\");\nconst appRoot = require('app-root-path');\nimport * as path from \"path\";\nimport {Videodb} from \"@/model/videodb\";\n\nexport class videodownloadObserver implements Observer{\n    constructor() {\n    }\n    update(type:string,data:any){\n        switch(type){\n            case 'downloadvideoend':\n                this.videodownloadend(data as ScrapeVideo);\n                break;\n            default:\n                break;\n        }\n    }\n    videodownloadend(data:ScrapeVideo){\n        debug(data);\n        //save data to video db\n        // const scraperDb = Scraperdb.getInstance(); \n        const videoDb=new Videodb();\n        const vemodel=new Videoedit();\n        const outputpath=path.resolve(appRoot+\"/tmp/video/filterwater/\")\n        const outputpathfilename=outputpath+path.sep+Math.random().toString(16).slice(2)+\".mp4\"\n        //save video data to db\n        videoDb.saveVideo(data.video,(insertId) =>vemodel.removeWatermark(data.video.localpath,outputpathfilename,insertId,function updatevidedata(insertId:number,outputpathfilename:string){\n            const videoDbs=new Videodb();\n            debug(\"start to update video filter, the insert id is \"+insertId+\" the output path is \"+outputpathfilename)\n            videoDbs.updateVideofilter(insertId,outputpathfilename)\n        }))\n        //update remote data\n        const remoteSourmodel = new RemoteSource();\n        if(data.scrapeinfo.id){\n        remoteSourmodel.Updateprocesstime(data.scrapeinfo.id);     \n        }\n    }\n    }","const { Browser } = require('puppeteer-cluster/dist/concurrency/builtInConcurrency');\nconst debug = require('debug')('se-scraper:CustomConcurrency');\nconst { timeoutExecute } = require('puppeteer-cluster/dist/util');\n\nconst BROWSER_TIMEOUT = 5000;\n\nexport class CustomConcurrency extends Browser {\n\n    async init() {}\n    async close() {}\n\n    async workerInstance() {\n        const options = this.options.perBrowserOptions.shift();\n        debug('Launch puppeteer instance with options=%o', options);\n        let chrome = await this.puppeteer.launch(options);\n        let page;\n        let context;\n\n        return {\n            jobInstance: async () => {\n                await timeoutExecute(BROWSER_TIMEOUT, (async () => {\n                    context = await chrome.createIncognitoBrowserContext();\n                    page = await context.newPage();\n                })());\n\n                return {\n                    resources: {\n                        page,\n                    },\n\n                    close: async () => {\n                        await timeoutExecute(BROWSER_TIMEOUT, context.close());\n                    },\n                };\n            },\n\n            close: async () => {\n                await chrome.close();\n            },\n\n            repair: async () => {\n                debug('Starting repair');\n                try {\n                    // will probably fail, but just in case the repair was not necessary\n                    await chrome.close();\n                } catch (e) {\n                    debug('Failed to close chrome: %o', e);\n                }\n\n                // just relaunch as there is only one page per browser\n                chrome = await this.puppeteer.launch(options);\n            },\n        };\n    }\n}\n\n// module.exports = CustomConcurrency;","\"use strict\";\n// Use TypeScript modules https://stackoverflow.com/questions/35758584/cannot-redeclare-block-scoped-variable\nexport { };\nconst fs = require(\"fs\");\nconst os = require(\"os\");\nconst _ = require(\"lodash\");\nconst { createLogger, format, transports } = require(\"winston\");\nconst { combine, timestamp, printf } = format;\nconst debug = require(\"debug\")(\"se-scraper:ScrapeManager\");\nconst { Cluster } = require(\"puppeteer-cluster\");\nconst vanillaPuppeteer = require(\"puppeteer\");\nconst { addExtra } = require(\"puppeteer-extra\");\n// const Stealth = require(\"puppeteer-extra-plugin-stealth\");\n// const AdblockerPlugin = require(\"puppeteer-extra-plugin-adblocker\");\n\nconst UserAgent = require(\"user-agents\");\nimport {FacebookScraper}  from \"@/modules/facebook_scraper\";\nimport {YoutubeScraper} from \"@/modules/youtube_scraper\";\nimport {BilibiliScraper} from \"@/modules/bilibili_scraper\";\nimport { SocialScraper, WosearchObj } from \"@/modules/social_scraper\"\nimport { Page } from 'puppeteer';\nimport {Linkdata} from '@/modules/remotesource';\nimport {videodownloadObserver} from '@/modules/videodownload_observer';\n\n// const bing = require('./modules/bing.js');\n// const yandex = require('./modules/yandex.js');\n// const infospace = require('./modules/infospace.js');\n// const duckduckgo = require('./modules/duckduckgo.js');\nimport{CustomConcurrency as CustomConcurrencyImpl} from \"@/concurrency-implementation\";\n// const axios = require(\"axios\");\nconst MAX_ALLOWED_BROWSERS = 6;\n// const puppeteer = require(\"puppeteer-extra\");\n// const _StealthPlugin = require('puppeteer-extra-plugin-stealth');\n// const _AdblockerPlugin = require('puppeteer-extra-plugin-adblocker');\n\nfunction write_results(fname, data) {\n  fs.writeFileSync(fname, data, (err) => {\n    if (err) throw err;\n    console.log(`Results written to file ${fname}`);\n  });\n}\n\nfunction read_keywords_from_file(fname) {\n  let kws = fs.readFileSync(fname).toString().split(os.EOL);\n  // clean keywords\n  kws = kws.filter((kw) => {\n    return kw.trim().length > 0;\n  });\n  return kws;\n}\n\n\nfunction getScraper(search_engine: string, args: any): SocialScraper {\n  if (typeof search_engine === \"string\") {\n    return new {\n      facebook: FacebookScraper,\n      youtube: YoutubeScraper,\n      bilibili: BilibiliScraper,\n    }[search_engine](args);\n  }\n  // else if (typeof search_engine === \"function\") {\n  //   return new search_engine(args);\n  // } \n  else {\n    throw new Error(\n      `social platform must either be a string of class (function)`\n    );\n  }\n}\ntype SMconfig = {\n  logger: { info: Function };\n  keywords: Array<string>;\n  proxies: Array<string>;\n  keyword_file: string;\n  proxy_file: string;\n  use_proxies_only: boolean;\n  custom_func: string;\n  chrome_flags: Array<string>;\n  puppeteer_cluster_config: {\n    maxConcurrency: number;\n    monitor: boolean;\n    timeout: number;\n  }\n  random_user_agent: boolean;\n  user_agent: string;\n  headless: boolean;\n  platform: string;\n  taskid?: number;\n}\nexport type SMstruct = {\n  // the user agent to scrape with\n  user_agent: string,\n  // if random_user_agent is set to True, a random user agent is chosen\n  random_user_agent: boolean,\n  // whether to start the browser in headless mode\n  // headless: false,\n  // whether debug information should be printed\n  // level 0: print nothing\n  // level 1: print most important info\n  // ...\n  // level 4: print all shit nobody wants to know\n  debug_level: number,\n  // specify flags passed to chrome here\n  chrome_flags: Array<string>,\n  // path to js module that extends functionality\n  // this module should export the functions:\n  // get_browser, handle_metadata, close_browser\n  // must be an absolute path to the module\n  //custom_func: resolve('examples/pluggable.js'),\n  custom_func: string,\n  // use a proxy for all connections\n  // example: 'socks5://78.94.172.42:1080'\n  // example: 'http://118.174.233.10:48400'\n  proxy: string,\n  // a file with one proxy per line. Example:\n  // socks5://78.94.172.42:1080\n  // http://118.174.233.10:48400\n  proxy_file: string,\n  use_cluster: boolean,\n  puppeteer_cluster_config: {\n    timeout: number, // max timeout set to 10 minutes\n    monitor: boolean,\n    concurrency: number, // one scraper per tab\n    maxConcurrency: number, // scrape with 1 tab\n  },\n  sleep_range?: Array<number>,\n}\nexport class ScrapeManager {\n  cluster: { execute: Function; idle: Function; close: Function };\n  pluggable: { start_browser?: Function, close_browser?: Function, handle_results?: Function, handle_metadata?: Function };\n  scraper: SocialScraper;\n  context: object;\n  config: SMconfig;\n  logger: { info: Function };\n  browser: { newPage: Function };\n  page: Page;\n  numClusters: number;\n  tmppath: string;\n  runLogin: Function;\n  constructor(config: SMstruct, context = {}) {\n    // this.cluster = null;\n    // this.pluggable = null;\n    // this.scraper = null;\n    this.context = context;\n\n    // await this.getRemoteConfig(campaignId)\n\n    this.config = _.defaults(config, {\n      // remote_add:endcofig.REMOTEADD,\n      // remote_username:endcofig.USERNAME,\n      // remote_password:endcofig.PASSWORD,\n      // the user agent to scrape with\n      user_agent:\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n      // if random_user_agent is set to True, a random user agent is chosen\n      random_user_agent: false,\n      // whether to select manual settings in visible mode\n      set_manual_settings: false,\n      // log ip address data\n      log_ip_address: false,\n      // log http headers\n      log_http_headers: false,\n      // how long to sleep between requests. a random sleep interval within the range [a,b]\n      // is drawn before every request. empty string for no sleeping.\n      sleep_range: null,\n\n      logger: createLogger({\n        level: \"info\",\n        format: combine(\n          timestamp(),\n          printf(({ level, message, timestamp }) => {\n            return `${timestamp} [${level}] ${message}`;\n          })\n        ),\n        transports: [new transports.Console()],\n      }),\n      platform: \"facebook\",\n      keywords: [\"nodejs rocks\"],\n      // whether to start the browser in headless mode\n      // headless: true,\n      // specify flags passed to chrome here\n      // About our defaults values https://peter.sh/experiments/chromium-command-line-switches/\n      chrome_flags: [\n        \"--disable-infobars\",\n        \"--window-position=0,0\",\n        \"--ignore-certifcate-errors\",\n        \"--ignore-certifcate-errors-spki-list\",\n        \"--no-sandbox\",\n        \"--disable-setuid-sandbox\",\n        \"--disable-dev-shm-usage\",\n        \"--disable-accelerated-2d-canvas\",\n        \"--disable-gpu\",\n        \"--window-size=1280,768\",\n        \"--start-fullscreen\",\n        \"--hide-scrollbars\",\n        \"--disable-notifications\",\n      ],\n      //fix google account can not login\n      ignoreDefaultArgs: [\n        \"--enable-automation\",\n        \"--disable-extensions\",\n        \"--disable-default-apps\",\n        \"--disable-component-extensions-with-background-pages\",\n      ],\n      // the number of pages to scrape for each keyword\n      num_pages: 1,\n      // path to output file, data will be stored in JSON\n      output_file: \"\",\n      // whether to also passthru all the html output of the serp pages\n      html_output: false,\n      // whether to strip JS and CSS from the html_output\n      // has only an effect if `html_output` is true\n      clean_html_output: true,\n      // remove all data images from the html\n      clean_data_images: true,\n      // whether to return a screenshot of serp pages as b64 data\n      screen_output: false,\n      // Scrape url from local file. Mainly used for testing.\n      scrape_from_file: \"\",\n      // whether to prevent images, css, fonts and media from being loaded\n      // will speed up scraping a great deal\n      block_assets: true,\n      // path to js module that extends functionality\n      // this module should export the functions:\n      // get_browser, handle_metadata, close_browser\n      //custom_func: resolve('examples/pluggable.js'),\n      custom_func: null,\n      throw_on_detection: false,\n      // List of proxies to use ['socks5://78.94.172.42:1080', 'http://localhost:1080']\n      proxies: null,\n      // a file with one proxy per line. Example:\n      // socks5://78.94.172.42:1080\n      // http://118.174.233.10:48400\n      proxy_file: \"\",\n      // whether to use proxies only\n      // when this is set to true, se-scraper will not use\n      // your default IP address\n      use_proxies_only: false,\n      // check if headless chrome escapes common detection techniques\n      // this is a quick test and should be used for debugging\n      test_evasion: false,\n      apply_evasion_techniques: true,\n      // settings for puppeteer-cluster\n      puppeteer_cluster_config: {\n        timeout: 30 * 60 * 1000, // max timeout set to 30 minutes\n        monitor: false,\n        concurrency: Cluster.CONCURRENCY_BROWSER,\n        maxConcurrency: 1,\n      },\n    });\n\n    this.logger = this.config.logger;\n\n    if (config.sleep_range) {\n      // parse an array\n      // config.sleep_range = eval(config.sleep_range);\n\n      if (\n        config.sleep_range.length !== 2\n      ) {\n        throw \"sleep_range is not a valid array of two integers.\";\n      }\n    }\n\n    if (fs.existsSync(this.config.keyword_file)) {\n      this.config.keywords = read_keywords_from_file(this.config.keyword_file);\n    }\n\n    if (this.config.proxies && this.config.proxy_file) {\n      throw new Error(\n        \"Either use a proxy_file or specify a proxy for all connections. Do not use both options.\"\n      );\n    }\n\n    if (this.config.proxy_file) {\n      this.config.proxies = read_keywords_from_file(this.config.proxy_file);\n      this.logger.info(`${this.config.proxies.length} proxies read from file.`);\n    }\n\n    if (!this.config.proxies && this.config.use_proxies_only) {\n      throw new Error(\n        \"Must provide at least one proxy in proxies if you enable use_proxies_only\"\n      );\n    }\n\n    debug(\"this.config=%O\", this.config);\n  }\n\n  /*\n   * Launches the puppeteer cluster or browser.\n   *\n   * Returns true if the browser was successfully launched. Otherwise will return false.\n   */\n  async start() {\n    if (this.config.custom_func) {\n      if (fs.existsSync(this.config.custom_func)) {\n        try {\n          const PluggableClass = require(this.config.custom_func);\n          this.pluggable = new PluggableClass({\n            config: this.config,\n            context: this.context,\n          });\n        } catch (exception) {\n          console.error(exception);\n          return false;\n        }\n      } else {\n        console.error(`File \"${this.config.custom_func}\" does not exist!`);\n        return false;\n      }\n    }\n\n    const chrome_flags = _.clone(this.config.chrome_flags);\n\n    if (this.pluggable && this.pluggable.start_browser) {\n      // launch_args.config = this.config;\n      this.browser = await this.pluggable.start_browser({\n        config: this.config,\n      });\n      // console.log(\"229\")\n      this.page = await this.browser.newPage();\n    } else {\n\n      // if no custom start_browser functionality was given\n      // use puppeteer-cluster for scraping\n\n      let proxies;\n      // if we have at least one proxy, always use CONCURRENCY_BROWSER\n      // and set maxConcurrency to this.config.proxies.length + 1\n      // else use whatever this.configuration was passed\n      if (this.config.proxies && this.config.proxies.length > 0) {\n        // because we use real browsers, we ran out of memory on normal laptops\n        // when using more than maybe 5 or 6 browsers.\n        // therefore hardcode a limit here\n        // TODO not sure this what we want\n        this.numClusters = Math.min(\n          this.config.proxies.length + (this.config.use_proxies_only ? 0 : 1),\n          MAX_ALLOWED_BROWSERS\n        );\n        proxies = _.clone(this.config.proxies);\n\n        // Insert a first config without proxy if use_proxy_only is false\n        if (this.config.use_proxies_only === false) {\n          proxies.unshift(null);\n        }\n      } else {\n        this.numClusters = this.config.puppeteer_cluster_config.maxConcurrency;\n        proxies = _.times(this.numClusters, null);\n      }\n\n      this.logger.info(`Using ${this.numClusters} clusters.`);\n\n      // Give the per browser options\n      const perBrowserOptions = _.map(proxies, (proxy) => {\n        const userAgent = this.config.random_user_agent\n          ? new UserAgent({ deviceCategory: \"desktop\" }).toString()\n          : this.config.user_agent;\n        let args = chrome_flags.concat([`--user-agent=${userAgent}`]);\n\n        if (proxy) {\n          args = args.concat([`--proxy-server=${proxy}`]);\n        }\n\n        return {\n          headless: this.config.headless,\n          ignoreHTTPSErrors: true,\n          args,\n        };\n      });\n\n      debug(\"perBrowserOptions=%O\", perBrowserOptions);\n\n      // puppeteer.use(_StealthPlugin());\n      // puppeteer.use(_AdblockerPlugin());\n\n      const puppeteer = addExtra(vanillaPuppeteer);\n\n      // Add stealth plugin and use defaults (all tricks to hide puppeteer usage)\n      //  puppeteer.use(Stealth());\n\n      // Add adblocker plugin to block all ads and trackers (saves bandwidth)\n      // puppeteer.use(AdblockerPlugin({ blockTrackers: true }));\n\n      this.cluster = await Cluster.launch({\n        puppeteer,\n        monitor: this.config.puppeteer_cluster_config.monitor,\n        timeout: this.config.puppeteer_cluster_config.timeout, // max timeout set to 30 minutes\n        concurrency: CustomConcurrencyImpl,\n        maxConcurrency: this.numClusters,\n        puppeteerOptions: {\n          // puppeteer:puppeteer,\n          perBrowserOptions: perBrowserOptions,\n        },\n      });\n    }\n  }\n\n  /*\n   * login the socila media platform\n   */\n  async login(scrape_config = {}) {\n    Object.assign(this.config, scrape_config);\n\n    // var results = {};\n    // var num_requests = 0;\n    // var metadata = {};\n    // var startTime = Date.now();\n\n    if (this.pluggable && this.pluggable.start_browser) {\n      // console.log(this.config.platform)\n      this.scraper = getScraper(this.config.platform, {\n        config: this.config,\n        context: this.context,\n        pluggable: this.pluggable,\n        page: this.page,\n        tmppath: this.tmppath,\n      });\n\n      await this.scraper.runLogin({ page: this.page });\n    } else {\n      // Each browser will get N/(K+1) keywords and will issue N/(K+1) * M total requests to the search engine.\n      // https://github.com/GoogleChrome/puppeteer/issues/678\n      // The question is: Is it possible to set proxies per Page? Per Browser?\n      // as far as I can see, puppeteer cluster uses the same puppeteerOptions\n      // for every browser instance. We will use our custom puppeteer-cluster version.\n      // https://www.npmjs.com/package/proxy-chain\n      // this answer looks nice: https://github.com/GoogleChrome/puppeteer/issues/678#issuecomment-389096077\n      const chunks : [][]=[];\n      for (let n = 0; n < this.numClusters; n++) {\n        chunks.push([]);\n      }\n      for (let k = 0; k < this.config.keywords.length; k++) {\n        chunks[k % this.numClusters].push(this.config.keywords[k] as never);\n      }\n\n      debug(\"chunks=%o\", chunks);\n\n      const execPromises = [];\n      for (let c = 0; c < chunks.length; c++) {\n        const config = _.clone(this.config);\n        config.keywords = chunks[c];\n\n        const obj = getScraper(this.config.platform, {\n          config: config,\n          context: {},\n          pluggable: this.pluggable,\n        });\n\n        const boundMethod = obj.runLogin.bind(obj);\n        execPromises.push(this.cluster.execute({}, boundMethod) as never);\n      }\n\n      await Promise.all(execPromises);\n\n      // Merge results and metadata per keyword\n      // for (let promiseReturn of promiseReturns) {\n      //     Object.assign(results, promiseReturn.results);\n      //     Object.assign(metadata, promiseReturn.metadata);\n      //     num_requests += promiseReturn.num_requests;\n      // }\n    }\n\n    // let timeDelta = Date.now() - startTime;\n    // let ms_per_request = timeDelta/num_requests;\n\n    // this.logger.info(`Scraper took ${timeDelta}ms to perform ${num_requests} requests.`);\n    // this.logger.info(`On average ms/request: ${ms_per_request}ms/request`);\n\n    // if (this.pluggable && this.pluggable.handle_results) {\n    //     await this.pluggable.handle_results(results);\n    // }\n\n    // metadata.elapsed_time = timeDelta.toString();\n    // metadata.ms_per_keyword = ms_per_request.toString();\n    // metadata.num_requests = num_requests;\n\n    // debug('metadata=%O', metadata);\n\n    // if (this.pluggable && this.pluggable.handle_metadata) {\n    //     await this.pluggable.handle_metadata(metadata);\n    // }\n\n    // if (this.config.output_file) {\n    //     this.logger.info(`Writing results to ${this.config.output_file}`);\n    //     write_results(this.config.output_file, JSON.stringify(results, null, 4));\n    // }\n\n    // return {\n    //     results: results,\n    //     metadata: metadata || {},\n    // };\n  }\n\n  /*\n   * get data url from platform\n   */\n  async searchdata(scrape_config = {}) {\n    Object.assign(this.config, scrape_config);\n\n    if (this.pluggable && this.pluggable.start_browser) {\n      // console.log(this.config.platform)\n      this.scraper = getScraper(this.config.platform, {\n        config: this.config,\n        context: this.context,\n        pluggable: this.pluggable,\n        page: this.page,\n        tmppath: this.tmppath,\n      });\n      const searobj: WosearchObj = { page: this.page };\n      await this.scraper.workersearchdata(searobj);\n    } else {\n      // Each browser will get N/(K+1) keywords and will issue N/(K+1) * M total requests to the search engine.\n      // https://github.com/GoogleChrome/puppeteer/issues/678\n      // The question is: Is it possible to set proxies per Page? Per Browser?\n      // as far as I can see, puppeteer cluster uses the same puppeteerOptions\n      // for every browser instance. We will use our custom puppeteer-cluster version.\n      // https://www.npmjs.com/package/proxy-chain\n      // this answer looks nice: https://github.com/GoogleChrome/puppeteer/issues/678#issuecomment-389096077\n      const chunks :[][]=[];\n      for (let n = 0; n < this.numClusters; n++) {\n        chunks.push([] as never);\n      }\n      for (let k = 0; k < this.config.keywords.length; k++) {\n        chunks[k % this.numClusters].push(this.config.keywords[k] as never);\n      }\n\n      debug(\"chunks=%o\", chunks);\n\n      const execPromises = [];\n      for (let c = 0; c < chunks.length; c++) {\n        const config = _.clone(this.config);\n        config.keywords = chunks[c];\n\n        const obj = getScraper(this.config.platform, {\n          config: config,\n          context: {},\n          pluggable: this.pluggable,\n        });\n\n        const boundMethod = obj.workersearchdata.bind(obj);\n        execPromises.push(this.cluster.execute({}, boundMethod) as never);\n      }\n\n      await Promise.all(execPromises);\n\n      // Merge results and metadata per keyword\n      // for (let promiseReturn of promiseReturns) {\n      //     Object.assign(results, promiseReturn.results);\n      //     Object.assign(metadata, promiseReturn.metadata);\n      //     num_requests += promiseReturn.num_requests;\n      // }\n    }\n\n    // let timeDelta = Date.now() - startTime;\n    // let ms_per_request = timeDelta/num_requests;\n\n    // this.logger.info(`Scraper took ${timeDelta}ms to perform ${num_requests} requests.`);\n    // this.logger.info(`On average ms/request: ${ms_per_request}ms/request`);\n\n    // if (this.pluggable && this.pluggable.handle_results) {\n    //     await this.pluggable.handle_results(results);\n    // }\n\n    // metadata.elapsed_time = timeDelta.toString();\n    // metadata.ms_per_keyword = ms_per_request.toString();\n    // metadata.num_requests = num_requests;\n\n    // debug('metadata=%O', metadata);\n\n    // if (this.pluggable && this.pluggable.handle_metadata) {\n    //     await this.pluggable.handle_metadata(metadata);\n    // }\n\n    // if (this.config.output_file) {\n    //     this.logger.info(`Writing results to ${this.config.output_file}`);\n    //     write_results(this.config.output_file, JSON.stringify(results, null, 4));\n    // }\n\n    // return {\n    //     results: results,\n    //     metadata: metadata || {},\n    // };\n  }\n\n  /*\n   * Quit the puppeteer cluster/browser.\n   */\n  async quit() {\n    if (this.pluggable && this.pluggable.close_browser) {\n      await this.pluggable.close_browser();\n    } else {\n      await this.cluster.idle();\n      await this.cluster.close();\n    }\n  }\n  async downloadPlatomvideo(links:Array<Linkdata>) {\n    //check whether user send correct platform parameter \n    const availPlatform = [\"bilibili\"];\n    if (!availPlatform.includes(this.config.platform)) {\n      throw new Error(\"download video function not work at platform \" + this.config.platform)\n    }\n    this.scraper = getScraper(this.config.platform, {\n      config: this.config,\n      context: this.context,\n      pluggable: this.pluggable,\n      page: this.page,\n      tmppath: this.tmppath,\n    });\n    debug(\"links=%o\", links)\n    //console.log(this.scraper)\n\n    //add observer before download video\n    const videodownObser=new videodownloadObserver();\n    this.scraper.attach(videodownObser);\n    await this.scraper.downloadvideo(links)\n   \n\n  }\n}\n\n\n\nmodule.exports = {\n  ScrapeManager: ScrapeManager,\n};\n","\"use strict\";\nexport {};\n// import { debug } from \"console\";\n// import { debug } from \"console\";\nimport {ScrapeManager,SMstruct} from \"../node_socialmk\";\nimport { RemoteSource } from \"./remotesource\"\nimport {Scraperdb} from \"../model/scraperdb\";\nconst debug = require('debug')('index');\n// var Scraper = require(\"./src/modules/social_scraper\");\n\nexport type ScrapeConfig={\n  // which search engine to scrape\n  // platform: \"facebook\",\n  // an array of keywords to scrape\n  keywords?: Array<string>,\n  // the number of pages to scrape for each keyword\n  num_pages?: number,\n\n  // OPTIONAL PARAMS BELOW:\n  // google_settings: {\n  //     gl: 'us', // The gl parameter determines the Google country to use for the query.\n  //     hl: 'fr', // The hl parameter determines the Google UI language to return results.\n  //     start: 0, // Determines the results offset to use, defaults to 0.\n  //     num: 100, // Determines the number of results to show, defaults to 10. Maximum is 100.\n  // },\n  // instead of keywords you can specify a keyword_file. this overwrites the keywords array\n  keyword_file?: string,\n  // how long to sleep between requests. a random sleep interval within the range [a,b]\n  // is drawn before every request. empty string for no sleeping.\n  sleep_range?: Array<number>,\n  // path to output file, data will be stored in JSON\n  output_file?: string,\n  // whether to prevent images, css, fonts from being loaded\n  // will speed up scraping a great deal\n  block_assets: boolean,\n  // check if headless chrome escapes common detection techniques\n  // this is a quick test and should be used for debugging\n  test_evasion?: boolean,\n  apply_evasion_techniques: boolean,\n  // log ip address data\n  log_ip_address?: boolean,\n  // log http headers\n  log_http_headers?: boolean,\n  platform: string,\n  user?:string,\n  pass?: string,\n  tmppath?:string,\n  taskid?:number,\n  resulttaskid?:number,\n}\nexport async function Login(browser_config:SMstruct, scrape_config:ScrapeConfig) {\n  // scrape config overwrites the browser_config\n  Object.assign(browser_config, scrape_config);\n\n  var scraper = new ScrapeManager(browser_config);\n  // var remoteConfig=await scraper.getRemoteConfig();\n  await scraper.start();\n\n  var results = await scraper.login(scrape_config);\n\n  await scraper.quit();\n\n  return results;\n}\n//get data urls\nexport async function Searchdata(browser_config:SMstruct, scrape_config:ScrapeConfig) {\n  // scrape config overwrites the browser_config\n  Object.assign(browser_config, scrape_config);\n  // debug(browser_config)\n  var scraper = new ScrapeManager(browser_config);\n  // var remoteConfig=await scraper.getRemoteConfig();\n  await scraper.start();\n  await scraper.searchdata(scrape_config);\n\n  await scraper.quit();\n}\n/**\n * get link from remote and download video\n * @param browser_config \n * @param scrape_config \n */\nexport async function Downloadvideo(browser_config:SMstruct, scrape_config:ScrapeConfig) {\n  Object.assign(browser_config, scrape_config);\n  const scropeNum=5;\n  // var scraper = new ScrapeManager(browser_config);\n  const remoteSourmodel = new RemoteSource();\n  debug(\"result task id is \"+scrape_config.resulttaskid)\n  if(!scrape_config.resulttaskid){\n    throw new Error(\"result_taskid is null\")\n  }\n  const linklist=await remoteSourmodel.Getscrapyinfolist(scrape_config.resulttaskid,scropeNum)\n  debug(linklist)\n  if(!linklist){\n    throw new Error(\"video link list is null\")   \n  }\n  if(linklist.length<1){\n    throw new Error(\"link list is empty\")\n  }\n  var scraper = new ScrapeManager(browser_config);\n \n  scraper.downloadPlatomvideo(linklist)\n\n}\nexport async function Sqlinit(){\n  const scraperdb=Scraperdb.getInstance();\n  scraperdb.init();\n}\n\n\n","import { Database } from 'sqlite3';\nimport { Scraperdb } from \"@/model/scraperdb\";\nimport {getRecorddatetime} from \"@/modules/lib/function\";\nexport class Taskrundb {\n    db: Database;\n    taskrunTable = \"task_run\"; \n    constructor() {\n        const scraperModel = Scraperdb.getInstance();\n        this.db = scraperModel.getdb();\n    }\n\n    public saveTaskrun(taskId:number,taskrunNum:string,logfilepath:string,callback:Function|undefined|null){\n        const recordtime =getRecorddatetime();\n        const sql =\n        `INSERT INTO ` +\n        this.taskrunTable +\n        ` (task_id,taskrun_num,log_path,record_time) VALUES (?,?,?,?)`;  \n        this.db.run(    \n            sql,\n            [taskId, taskrunNum,logfilepath,recordtime],\n            function (err) {\n              if (err) {\n                throw new Error(\n                  err.message + \" taskid:\" + taskId.toString() + \" recordtime:\" + recordtime\n                );\n              }\n              if (this.lastID) {           \n                if(callback){\n                  callback(this.lastID)\n                }\n              }    \n            }\n          );\n    }\n    //get task id by task run number\n    public getTaskidbytaskrunNum(taskrunNum: string): number {\n      const sql = `SELECT task_id FROM ` + this.taskrunTable + ` WHERE taskrun_num = ?`;\n      let taskid: number = 0;\n      this.db.get(sql, [taskrunNum], (err, row) => {\n        if (err) {\n          throw new Error(err.message);\n        }\n        if (row) {\n          taskid = (row as { task_id: number }).task_id;\n        }\n      });\n      return taskid;\n    }\n    //check task id and task run number exist\n    public checkTaskrunExist(taskid:number,taskrunNum:string):boolean{\n      const sql = `SELECT task_id FROM ` + this.taskrunTable + ` WHERE task_id = ? AND taskrun_num = ?`;\n      let exist: boolean = false;\n      this.db.get(sql, [taskid,taskrunNum], (err, row) => {\n        if (err) {\n          throw new Error(err.message);\n        }\n        if (row) {\n          exist = true;\n        }\n      });\n      return exist;\n    }\n\n}","'use strict'\n\nfunction oldBrowser () {\n  throw new Error('secure random number generation not supported by this browser\\nuse chrome, FireFox or Internet Explorer 11')\n}\n\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > 65536) throw new Error('requested too many random bytes')\n  // in case browserify  isn't using the Uint8Array version\n  var rawBytes = new global.Uint8Array(size)\n\n  // This will not work in older browsers.\n  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    crypto.getRandomValues(rawBytes)\n  }\n  // phantomjs doesn't like a buffer being passed here\n  var bytes = new Buffer(rawBytes.buffer)\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n","function Charset() {\n  this.chars = '';\n}\n\nCharset.prototype.setType = function(type) {\n  if (Array.isArray(type)) {\n    for (var i=0; i < type.length; i++) {\n      this.chars += this.getCharacters(type[i]);\n    }\n  }\n  else {\n    this.chars = this.getCharacters(type);\n  }\n}\n\nCharset.prototype.getCharacters = function(type) {\n  var chars;\n\n  var numbers     = '0123456789';\n  var charsLower  = 'abcdefghijklmnopqrstuvwxyz';\n  var charsUpper  = charsLower.toUpperCase();\n  var hexChars    = 'abcdef';\n  var binaryChars = '01';\n  var octalChars  = '01234567';\n\n  if (type === 'alphanumeric') {\n    chars = numbers + charsLower + charsUpper;\n  }\n  else if (type === 'numeric') {\n    chars = numbers;\n  }\n  else if (type === 'alphabetic') {\n    chars = charsLower + charsUpper;\n  }\n  else if (type === 'hex') {\n    chars = numbers + hexChars;\n  }\n  else if (type === 'binary') {\n    chars = binaryChars;\n  }\n  else if (type === 'octal') {\n    chars = octalChars;\n  }\n  else {\n    chars = type;\n  }\n\n  return chars;\n}\n\nCharset.prototype.removeUnreadable = function() {\n  var unreadableChars = /[0OIl]/g;\n  this.chars = this.chars.replace(unreadableChars, '');\n}\n\nCharset.prototype.setcapitalization = function(capitalization) {\n  if (capitalization === 'uppercase') {\n    this.chars = this.chars.toUpperCase();\n  }\n  else if (capitalization === 'lowercase') {\n    this.chars = this.chars.toLowerCase();\n  }\n}\n\nCharset.prototype.removeDuplicates = function() {\n  var charMap = this.chars.split('');\n  charMap = [...new Set(charMap)];\n  this.chars = charMap.join('');\n}\n\nmodule.exports = exports = Charset;\n","\"use strict\";\n\nvar randomBytes = require('randombytes');\nvar Charset = require('./charset.js');\n\n\nfunction unsafeRandomBytes(length) {\n  var stack = [];\n  for (var i = 0; i < length; i++) {\n    stack.push(Math.floor(Math.random() * 255));\n  }\n\n  return {\n    length,\n    readUInt8: function (index) {\n      return stack[index];\n    }\n  };\n}\n\nfunction safeRandomBytes(length) {\n  try {\n    return randomBytes(length);\n  } catch (e) {\n    /* React/React Native Fix + Eternal loop removed */\n    return unsafeRandomBytes(length);\n  }\n}\n\nfunction processString(buf, initialString, chars, reqLen, maxByte) {\n  var string = initialString;\n  for (var i = 0; i < buf.length && string.length < reqLen; i++) {\n    var randomByte = buf.readUInt8(i);\n    if (randomByte < maxByte) {\n      string += chars.charAt(randomByte % chars.length);\n    }\n  }\n  return string;\n}\n\nfunction getAsyncString(string, chars, length, maxByte, cb) {\n  randomBytes(length, function(err, buf) {\n    if (err) {\n      // Since it is waiting for entropy, errors are legit and we shouldn't just keep retrying\n      cb(err);\n    }\n    var generatedString = processString(buf, string, chars, length, maxByte);\n    if (generatedString.length < length) {\n      getAsyncString(generatedString, chars, length, maxByte, cb);\n    } else {\n      cb(null, generatedString);\n    }\n  })\n}\n\nexports.generate = function(options, cb) {\n  var charset = new Charset();\n\n  var length, chars, capitalization, string = '';\n\n  // Handle options\n  if (typeof options === 'object') {\n    length = typeof options.length === 'number' ? options.length : 32;\n\n    if (options.charset) {\n      charset.setType(options.charset);\n    }\n    else {\n      charset.setType('alphanumeric');\n    }\n\n    if (options.capitalization) {\n      charset.setcapitalization(options.capitalization);\n    }\n\n    if (options.readable) {\n      charset.removeUnreadable();\n    }\n\n    charset.removeDuplicates();\n  }\n  else if (typeof options === 'number') {\n    length = options;\n    charset.setType('alphanumeric');\n  }\n  else {\n    length = 32;\n    charset.setType('alphanumeric');\n  }\n\n  // Generate the string\n  var charsLen = charset.chars.length;\n  var maxByte = 256 - (256 % charsLen);\n\n  if (!cb) {\n    while (string.length < length) {\n      var buf = safeRandomBytes(Math.ceil(length * 256 / maxByte));\n      string = processString(buf, string, charset.chars, length, maxByte);\n    }\n\n    return string;\n  }\n\n  getAsyncString(string, charset.chars, length, maxByte, cb);\n\n};\n","module.exports = require(\"./lib/randomstring\");","import { getApplogpath, getdate } from \"@/modules/lib/function\"\nimport { Taskrundb } from \"@/model/taskrundb\"\n// import { v4 as uuidv4 } from 'uuid';\nimport * as randomstring from \"randomstring\";\nimport {SocialTaskRunEntity} from \"@/entity-types/socialtask-type\"\nconst path = require(\"path\");\n\n//the social task run created each time when task run\nexport class SocialTaskRun {\n    public createsocialtaskrun(socailtaskId: number,taskrunNum:string): SocialTaskRunEntity {\n        const taskrunmodel = new Taskrundb()\n        const logfile = this.getlogfile(socailtaskId)\n        const res=taskrunmodel.checkTaskrunExist(socailtaskId, taskrunNum)\n        if(res){\n            throw new Error(\"task run number exist\")\n        }\n        // const taskrunNum = this.gentaskrunNum(socailtaskId)\n        taskrunmodel.saveTaskrun(socailtaskId, taskrunNum, logfile, null)\n        const socialtaskRun: SocialTaskRunEntity = {\n            taskId: socailtaskId,\n            taskRunNum: taskrunNum,\n            logfile: logfile\n        }\n        return socialtaskRun\n    }\n   \n\n    private getlogfile(socailtaskId: number): string {\n        const logDir = getApplogpath();\n        if (!logDir) {\n            throw new Error(\"get user home dir error\")\n        }\n        const recorddate = getdate()\n        return path.join(logDir, \"social-task-log\", recorddate, socailtaskId.toString() + \".log\");\n    }\n\n    //generate unique task run number\n    private gentaskrunNum(taskId: number): string {\n        return taskId.toString() + \":\" + randomstring.generate();\n    }\n    //get task id by task run id\n    public getTaskidbytaskrunNum(taskrunNum: string): number {\n        const taskrunmodel = new Taskrundb()\n        return taskrunmodel.getTaskidbytaskrunNum(taskrunNum)\n    }\n}\n","import url from \"url\"\n//import request from \"@/modules/lib/request\"\nimport { SocialTaskRun } from \"@/modules/socialtaskrun\"\n//import { spawn } from 'node:child_process';\n// import { Worker } from 'worker_threads';\n// const os = require(\"os\");\nimport { SocialTaskEntity, SocialTaskResponse, SocialTaskInfoResponse, SocialTaskTypeResponse, SaveSocialTaskResponse, TagResponse, SocialTaskRunEntity } from \"@/entity-types/socialtask-type\"\nimport { utilityProcess, MessageChannelMain} from \"electron\";\nimport * as path from 'path';\n// import { spawn } from 'node:child_process';\nimport * as fs from 'fs';\nimport { HttpClient } from \"@/modules/lib/httpclient\"\n// const fileLocation = path.join(__static, 'myText.txt')\nexport class SocialTask {\n    private _httpClient: HttpClient\n    //construct\n    constructor() {\n        this._httpClient=new HttpClient()\n    }\n    /**\n    * get social task from remote servive\n    */\n    async getTaskbycampagin(campaignId: number, page: number, size: number): Promise<SocialTaskResponse | null> {\n        const queryParams = new URLSearchParams({ \"campaiginId\": campaignId.toString(), \"page\": page.toString(), \"size\": size.toString() })\n        const params = new url.URLSearchParams(queryParams);\n\n        const tasklistres = await this._httpClient.get(\n            '/api/listsotask?' + params\n        ).catch(function (error) {\n            throw new Error(error.message);\n            // console.error(error);\n        })\n        if (!tasklistres) {\n            throw new Error(\"remote return social task is null\");\n        }\n        // console.log(\"campaign list is following\")\n        // console.log(campignlistres.data)\n        // const resp: SocialTaskResponse = {\n        //     status: campignlistres.data.status,\n        //     msg: campignlistres.data.msg,\n        //     data: campignlistres.data.data,\n        // }\n        return tasklistres as SocialTaskResponse\n    }\n\n    /**\n     * get social task info by task id\n     */\n    async getTaskbyid(taskId: number): Promise<SocialTaskInfoResponse | null> {\n        const queryParams = new URLSearchParams({ \"task_id\": taskId.toString() })\n        const params = new url.URLSearchParams(queryParams);\n\n        const taskinfores = await this._httpClient.get(\n            '/api/getsocialtaskinfo?' + params,\n        ).catch(function (error) {\n            throw new Error(error.message);\n            // console.error(error);\n        })\n        if (!taskinfores) {\n            throw new Error(\"remote return social task is null\");\n        }\n        // console.log(\"campaign list is following\")\n        // console.log(campignlistres.data)\n        // const resp: SocialTaskResponse = {\n        //     status: campignlistres.data.status,\n        //     msg: campignlistres.data.msg,\n        //     data: campignlistres.data.data,\n        // }\n        return taskinfores as SocialTaskInfoResponse\n    }\n    //get social task type list\n    async getTasktype(): Promise<SocialTaskTypeResponse | null> {\n        const tasktyperes = await this._httpClient.get(\n          '/api/socialtasktype',\n        ).catch(function (error) {\n            throw new Error(error.message);\n            // console.error(error);\n        })\n        if (!tasktyperes) {\n            throw new Error(\"remote return social task type is null\");\n        }\n\n        return tasktyperes.data as SocialTaskTypeResponse\n    }\n\n    //get tag list\n    async getTaglist(): Promise<TagResponse> {\n        const tagres = await this._httpClient.get(\n        '/api/tag',\n        ).catch(function (error) {\n            throw new Error(error.message);\n            // console.error(error);\n        })\n        if (!tagres) {\n            throw new Error(\"remote return tag is null\");\n        }\n\n        return tagres as TagResponse\n    }\n    //save social task\n    async saveSocialTask(data: SocialTaskEntity): Promise<SaveSocialTaskResponse> {\n\n\n        const formData = new FormData();\n        // Object.entries(data).forEach(([key, value]) => {\n        //     formData.append(key, String(value));\n        // });\n        if (data.id) {\n            formData.append(\"socialtask_id\", String(data.id));\n        }\n        formData.append(\"campaign_id\", String(data.campaign_id));\n        formData.append(\"task_name\", String(data.task_name));\n        formData.append(\"type_id\", String(data.type_id));\n        if (data.tag) {\n            formData.append(\"tags[]\", String(data.tag));\n        }\n        if (data.keywords) {\n            formData.append(\"keywords[]\", String(data.keywords));\n        }\n\n        const tasktyperes = await this._httpClient.post(\n           '/api/savesocialtask',\n            data,\n        ).catch(function (error) {\n            throw new Error(error.message);\n            // console.error(error);\n        })\n        if (!tasktyperes) {\n            throw new Error(\"remote return social task type is null\");\n        }\n\n        return tasktyperes.data as SaveSocialTaskResponse\n    }\n\n    async createsocialtask(socailtaskId: number,taskRunNum:string): Promise<SocialTaskRunEntity> {\n        const runModel = new SocialTaskRun()\n        const socialTaskrun = runModel.createsocialtaskrun(socailtaskId,taskRunNum)\n        // const result = await this.runsocialtask(socialTaskrun)\n        return socialTaskrun\n    }\n\n    public async runsocialtask(entity: SocialTaskRunEntity,callback:Function|undefined|null) {\n        const childPath = path.join(__dirname, 'utilityCode.js')\n        if (!fs.existsSync(childPath)) {\n            throw new Error(\"child js path not exist for the path \" + childPath);\n        }\n        const { port1, port2 } = new MessageChannelMain()\n\n        const child = utilityProcess.fork(path.join(__dirname, 'utilityCode.js'), ['-a','runtask','-t',entity.taskRunNum],{stdio:\"pipe\"} )\n        console.log(path.join(__dirname, 'utilityCode.js'))\n        \n        // child.postMessage({ message: 'hello' }, [port1])\n        child.on(\"spawn\", () => {\n            \n            child.postMessage({ message: 'hello' }, [port1])\n        })\n        child.stdout?.on('data', (data) => {\n            console.log(`Received data chunk ${data}`)\n            if(callback){\n                callback(data.toString())\n            }\n        })\n        child.stderr?.on('data', (data) => {\n            console.log(`Received error chunk ${data}`)\n            if(callback){\n                callback(data.toString())\n            }\n        })\n        child.on(\"exit\", () => {\n            console.log(`child process exited `)\n        })\n\n        port2.on(\"message\", (e) => {\n            console.log(\"port receive:\", e.data);\n            port2.postMessage(\"I receive your messages:\")\n        })\n        port2.start()\n        child.on(\"message\", (e) => {\n            console.log(\"接收到消息了：\", e);\n        })\n\n    }\n}","\"use strict\";\nexport {};\n// const se_scraper = require(\"./index\");\nimport {Login,Searchdata,Downloadvideo,ScrapeConfig,Sqlinit} from \"@/modules/scrapeindex\";\nconst { ArgumentParser } = require(\"argparse\");\nimport {RemoteSource} from \"@/modules/remotesource\";\nimport {SocialTaskRun} from \"@/modules/socialtaskrun\"\nimport {SocialTaskEntity} from \"@/entity-types/socialtask-type\"\nimport {SocialTask} from \"@/modules/socialtask\"\n// const { version } = require(\"./package.json\");\nconst fs = require('fs');\nconst resolve = require('path').resolve;\nconst debug = require('debug')('runcli');\n\n// const { data } = require(\"cheerio/lib/api/attributes.js\");\n\nconst parser = new ArgumentParser({\n  description: \"Social martketing\",\n});\n\n// parser.add_argument(\"-v\", \"--version\", { action: \"version\", version });\nparser.add_argument(\"-a\", \"--action\", {\n  help: \"Tha action you want to the program to take\",\n});\nparser.add_argument(\"-c\", \"--campaign\", {\n  help: \"Tha campaign id you want to program to take\",\n});\nparser.add_argument(\"-t\", \"--taskrunnum\", {\n  help: \"Tha task run number you want to program to take\",\n});\nparser.add_argument(\"-head\", \"--headless\", {\n    help: \"Tha task run number you want to program to take\",\n});\n\nlet parearg = parser.parse_args();\n\n// those options need to be provided on startup\n// and cannot give to se-scraper on scrape() calls\nlet browser_config = {\n  // the user agent to scrape with\n  user_agent:\n    \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n  // if random_user_agent is set to True, a random user agent is chosen\n  random_user_agent: false,\n  // whether to start the browser in headless mode\n   headless: true,\n  // whether debug information should be printed\n  // level 0: print nothing\n  // level 1: print most important info\n  // ...\n  // level 4: print all shit nobody wants to know\n  debug_level: 1,\n  // specify flags passed to chrome here\n  chrome_flags: [],\n  // path to js module that extends functionality\n  // this module should export the functions:\n  // get_browser, handle_metadata, close_browser\n  // must be an absolute path to the module\n  //custom_func: resolve('examples/pluggable.js'),\n  custom_func: \"\",\n  // use a proxy for all connections\n  // example: 'socks5://78.94.172.42:1080'\n  // example: 'http://118.174.233.10:48400'\n  proxy: \"\",\n  // a file with one proxy per line. Example:\n  // socks5://78.94.172.42:1080\n  // http://118.174.233.10:48400\n  proxy_file: \"\",\n  use_cluster:false,\n  puppeteer_cluster_config: {\n    timeout: 10 * 60 * 1000, // max timeout set to 10 minutes\n    monitor: false,\n    concurrency: 1, // one scraper per tab\n    maxConcurrency: 1, // scrape with 1 tab\n  },\n};\n\nlet scrape_config:ScrapeConfig = {\n  // which search engine to scrape\n  // platform: \"facebook\",\n  // an array of keywords to scrape\n  // keywords: [\"cloud service test\"],\n  // the number of pages to scrape for each keyword\n  // num_pages: 1,\n\n  // OPTIONAL PARAMS BELOW:\n  // google_settings: {\n  //     gl: 'us', // The gl parameter determines the Google country to use for the query.\n  //     hl: 'fr', // The hl parameter determines the Google UI language to return results.\n  //     start: 0, // Determines the results offset to use, defaults to 0.\n  //     num: 100, // Determines the number of results to show, defaults to 10. Maximum is 100.\n  // },\n  // instead of keywords you can specify a keyword_file. this overwrites the keywords array\n  // keyword_file: \"\",\n  // how long to sleep between requests. a random sleep interval within the range [a,b]\n  // is drawn before every request. empty string for no sleeping.\n  // sleep_range: \"\",\n  // path to output file, data will be stored in JSON\n  output_file: \"/tmp/test/test.json\",\n  // whether to prevent images, css, fonts from being loaded\n  // will speed up scraping a great deal\n  block_assets: false,\n  // check if headless chrome escapes common detection techniques\n  // this is a quick test and should be used for debugging\n  test_evasion: false,\n  apply_evasion_techniques: true,\n  // log ip address data\n  log_ip_address: false,\n  // log http headers\n  log_http_headers: false,\n  platform: \"facebook\",\n  // user: \"\",\n  // pass: \"\",\n  tmppath:\"\",\n  taskid:0,\n};\n\nfunction get(object:Array<string>, key:string, default_value) {\n  var result = object[key];\n  return typeof result !== \"undefined\" ? result : default_value;\n}\n\nasync function runCommand(parearg) {\n  let action = get(parearg, \"action\", false);\n  if (!action) {\n    console.log(\"no parameter action been passed\");\n  }\n \n  switch (action) {\n    case \"login\":\n      login();\n      break;\n    case \"runtask\":\n      const taskrunnum = get(parearg, \"taskrunnum\", false);\n      if(!taskrunnum){\n        throw new Error(\"task id is empty\")\n      }\n      runTask(taskrunnum)\n      break; \n    case \"sqlinit\":\n      Sqlinit();\n    break;  \n\n  }\n}\n//get campaign\n// async function getcampaign():Promise<void> {\n//   var remotesource =RemoteSource.getInstance();\n//   const campaignlist=await remotesource.getCampaignlist()\n//   debug(campaignlist)\n//   if(!campaignlist){\n//     throw new Error(\"campaignlist is undefined\");\n//   }\n//   const arrLength = campaignlist?.length ?? 0;\n//   if(arrLength==0){\n//     console.log(\"not campaign need to run\")\n//   }\n//   for (const campaign of campaignlist) {\n//     switch (campaign.type) {\n//       case \"bilibiliscrape\":\n//         scrape_config.platform=\"bilibili\"\n//         scrape_config.taskid=campaign.id\n//         scrape_config.keywords=campaign.keywords\n//         await Searchdata(browser_config, scrape_config);\n//         break;\n//       case 'bilibilidownload':\n//         scrape_config.platform=\"bilibili\"\n//         if(campaign.extra_task_info.TaskId<=0){\n//           break;\n//         }\n//         scrape_config.taskid=campaign.extra_task_info.TaskId;\n//         scrape_config.resulttaskid=campaign.extra_task_info.TaskId\n//         await Downloadvideo(browser_config, scrape_config);\n//         break;  \n//     }\n//   }  \n// }\n\nasync function runTask(taskRunNum:string):Promise<void>{\n  const socialtaskrun = new SocialTaskRun();\n  const taskId=await socialtaskrun.getTaskidbytaskrunNum(taskRunNum);\n  const socialtask=new SocialTask()\n  const taskInfoResult=await socialtask.getTaskbyid(taskId)\n  if(!taskInfoResult){\n    throw new Error(\"taskInfo is undefined\");\n  }\n  // const taskArr=await remoteSourmodel.Gettaskkeywords(taskId)\n  if(!taskInfoResult.status){\n      throw new Error(taskInfoResult.msg)\n  }\n  if(!taskInfoResult.data){\n      throw new Error(\"social task data empty\");\n  }\n  const taskInfo=taskInfoResult.data as SocialTaskEntity;\n  switch (taskInfo.task_name) {\n    case \"bilibiliscrape\":\n        scrape_config.platform=\"bilibili\"\n        scrape_config.taskid=taskInfo.id\n        scrape_config.keywords=taskInfo.keywords\n        await Searchdata(browser_config, scrape_config);\n        break;\n      case 'bilibilidownload':\n        // scrape_config.platform=\"bilibili\"\n        // if(!taskInfo.extra_task_info.ResulttaskId){\n        //  throw new Error(\"ResulttaskId is undefined\");\n        // }\n        // debug(taskInfo)\n        // scrape_config.taskid=taskInfo.id;\n        // scrape_config.resulttaskid=taskInfo.extra_task_info.ResulttaskId\n        // debug(scrape_config)\n        // await Downloadvideo(browser_config, scrape_config);\n        break;\n  }\n\n\n}\n//login to facebook\nasync function login() {\n  let campaignId = get(parearg, \"campaign\", false);\n  var remotesource =new RemoteSource();\n  let sosetting = await remotesource.getRemoteConfig(campaignId);\n  debug(sosetting)\n  if(sosetting== null||!sosetting){\n    throw new Error(\"sosetting is undefined\");\n  }\n  scrape_config.platform = sosetting.sotype;\n  scrape_config.user = sosetting.socialuser;\n  scrape_config.pass = sosetting.socialpass;\n  console.log(sosetting);\n  //create a tmp folder\n  const tmppath = resolve(\"./tmp/\" + scrape_config.platform + \"/\" + sosetting.socialuser);\n  await createPath(tmppath);\n  scrape_config.tmppath=tmppath\n\n  await Login(browser_config, scrape_config);\n}\n\nfunction createPath(path) {\n  path.split(\"/\").reduce((directories, directory) => {\n    directories += `${directory}/`;\n\n    if (!fs.existsSync(directories)) {\n      fs.mkdirSync(directories);\n    }\n\n    return directories;\n  }, \"\");\n}\n\nrunCommand(parearg);\n"],"names":["cheerio","get_ip_data","page","json","ipinfo_text","get_http_headers","headers","headers_text","CryptoSource","__publicField","crypto","salt","text","cipher","encrypted","iv","encryptedText","decipher","decrypted","keytar","StoreService","service","account","password","Token","key","token","buffer","safeStorage","encrytoken","HttpClient","tokenval","endpoint","options","res","data","value","username","formData","operations","e","r","n","o","a","c","t","debug","RemoteSource","result","campaignId","error","link","FormData","taskId","limit","keywords","Keyitemarr","item","scropeId","thisobj","decoded","jwt_decode","appRoot","fs","SocialScraper","settings","observer","observerIndex","type","runobj","_a","evadeChromeHeadlessDetection","req","testUrl","ipinfo","_b","_c","seachobj","workerseach","links","remoteSourmodel","linkItem","linkobj","list","currentdate","datetime","videosavepath","path","index","videoArray","i","scrapeitem","videopath","newProto","FacebookScraper","Scraper","args","startUrl","YoutubeScraper","icon","cookies","http","https","progress","fetch","debugerror","Task","url","Downloader","videoUrl","mapping","response","aiddata","aid","cid","fallback","playUrl","params","sign","target","part","file","callback","state","stream","proStream","percentage","downloadLink","autoScroll","resolve","totalHeight","distance","timer","scrollHeight","getRecorddatetime","date","pad2","getdate","getUserhome","getApplogpath","appname","sanitize","BilibiliScraper","button","err","searobj","searchbtn","element","subsearobg","linkres","sersearobg","serobj","keyelement","csobj","browser","pages","searchPage","linkPage","linkmap","taskids","alinks","alink","linkobg","herf","htitle","htres","downloader","videores","filename","quality","videoQuantity","Videoedit","videoPath","outputpathfile","insertId","outputpath","pythonProcess","spawn","code","convername","convertPath","outputPath","sourcelang","targetlang","_Scraperdb","dbpath","Database","videotablepath","files","Scraperdb","Videodb","scraperModel","videoinfo","languageid","recordtime","sql","component","videoId","filterpath","videoscsql","videodownloadObserver","videoDb","vemodel","outputpathfilename","videoDbs","Browser","timeoutExecute","BROWSER_TIMEOUT","CustomConcurrency","chrome","context","os","_","createLogger","format","transports","combine","timestamp","printf","Cluster","vanillaPuppeteer","addExtra","UserAgent","MAX_ALLOWED_BROWSERS","read_keywords_from_file","fname","kws","kw","getScraper","search_engine","ScrapeManager","config","level","message","PluggableClass","exception","chrome_flags","proxies","perBrowserOptions","proxy","userAgent","puppeteer","CustomConcurrencyImpl","scrape_config","chunks","k","execPromises","obj","boundMethod","videodownObser","Login","browser_config","scraper","results","Searchdata","Sqlinit","Taskrundb","taskrunNum","logfilepath","taskid","row","exist","oldBrowser","global","browserModule","randomBytes","size","cb","rawBytes","bytes","Charset","chars","numbers","charsLower","charsUpper","hexChars","binaryChars","octalChars","unreadableChars","capitalization","charMap","module","require$$0","require$$1","unsafeRandomBytes","length","stack","safeRandomBytes","processString","buf","initialString","reqLen","maxByte","string","randomByte","getAsyncString","generatedString","randomstring","charset","charsLen","SocialTaskRun","socailtaskId","taskrunmodel","logfile","logDir","recorddate","randomstring.generate","SocialTask","queryParams","tasklistres","taskinfores","tasktyperes","tagres","taskRunNum","entity","childPath","port1","port2","MessageChannelMain","child","utilityProcess","ArgumentParser","parser","parearg","get","object","default_value","runCommand","action","login","taskrunnum","runTask","taskInfoResult","taskInfo","remotesource","sosetting","tmppath","createPath","directories","directory"],"mappings":"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","x_google_ignoreList":[5,21,22,23,24]}