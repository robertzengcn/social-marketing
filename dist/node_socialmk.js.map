{"version":3,"file":"node_socialmk.js","sourceRoot":"","sources":["../src/node_socialmk.ts"],"names":[],"mappings":"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","sourcesContent":["\"use strict\";\n// Use TypeScript modules https://stackoverflow.com/questions/35758584/cannot-redeclare-block-scoped-variable\nexport {};\nconst fs = require(\"fs\");\nconst os = require(\"os\");\nconst _ = require(\"lodash\");\nconst { createLogger, format, transports } = require(\"winston\");\nconst { combine, timestamp, printf } = format;\nconst debug = require(\"debug\")(\"se-scraper:ScrapeManager\");\nconst { Cluster } = require(\"puppeteer-cluster\");\nconst vanillaPuppeteer = require(\"puppeteer\");\nconst { addExtra } = require(\"puppeteer-extra\");\n// const Stealth = require(\"puppeteer-extra-plugin-stealth\");\n// const AdblockerPlugin = require(\"puppeteer-extra-plugin-adblocker\");\n\nconst UserAgent = require(\"user-agents\");\nconst facebook = require(\"./modules/facebook_scraper.js\");\nconst youtube = require(\"./modules/youtube_scraper.js\");\nconst bilibili = require(\"./modules/bilibili_scraper.js\");\n// const bing = require('./modules/bing.js');\n// const yandex = require('./modules/yandex.js');\n// const infospace = require('./modules/infospace.js');\n// const duckduckgo = require('./modules/duckduckgo.js');\nconst CustomConcurrencyImpl = require(\"./concurrency-implementation\");\n// const axios = require(\"axios\");\nconst MAX_ALLOWED_BROWSERS = 6;\n// const puppeteer = require(\"puppeteer-extra\");\n// const _StealthPlugin = require('puppeteer-extra-plugin-stealth');\n// const _AdblockerPlugin = require('puppeteer-extra-plugin-adblocker');\n\nfunction write_results(fname, data) {\n  fs.writeFileSync(fname, data, (err) => {\n    if (err) throw err;\n    console.log(`Results written to file ${fname}`);\n  });\n}\n\nfunction read_keywords_from_file(fname) {\n  let kws = fs.readFileSync(fname).toString().split(os.EOL);\n  // clean keywords\n  kws = kws.filter((kw) => {\n    return kw.trim().length > 0;\n  });\n  return kws;\n}\n\n\nfunction getScraper(search_engine:string, args:any) {\n  if (typeof search_engine === \"string\") {\n    return new {\n      facebook: facebook.FacebookScraper,\n      youtube: youtube.YoutubeScraper,\n      bilibili: bilibili.BilibiliScraper,\n    }[search_engine](args);\n  } \n  // else if (typeof search_engine === \"function\") {\n  //   return new search_engine(args);\n  // } \n  else {\n    throw new Error(\n      `social platform must either be a string of class (function)`\n    );\n  }\n}\ntype SMconfig ={\n  logger:{info:Function};\n  keywords:Array<string>;\n  proxies:Array<string>;\n  keyword_file:string;\n  proxy_file:string;\n  use_proxies_only:boolean;\n  custom_func:string;\n  chrome_flags:Array<string>;\n  puppeteer_cluster_config:{\n    maxConcurrency:number;\n    monitor:boolean;\n    timeout:number;\n  }\n  random_user_agent:boolean;\n  user_agent:string;\n  headless:boolean;\n  platform:string;\n}\nclass ScrapeManager {\n  cluster:{execute:Function;idle:Function;close:Function};\n  pluggable:{start_browser?:Function,close_browser?:Function,handle_results?:Function,handle_metadata?:Function};\n  scraper:{runLogin:Function;workersearchdata:Function};\n  context:object;\n  config:SMconfig;\n  logger:{info:Function};\n  browser:{newPage:Function};\n  page:object;\n  numClusters:number;\n  tmppath:string;\n  runLogin:Function;\n  constructor(config, context = {}) {\n    this.cluster = null;\n    this.pluggable = null;\n    this.scraper = null;\n    this.context = context;\n    \n    // await this.getRemoteConfig(campaignId)\n\n    this.config = _.defaults(config, {\n      // remote_add:endcofig.REMOTEADD,\n      // remote_username:endcofig.USERNAME,\n      // remote_password:endcofig.PASSWORD,\n      // the user agent to scrape with\n      user_agent:\n        \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36\",\n      // if random_user_agent is set to True, a random user agent is chosen\n      random_user_agent: false,\n      // whether to select manual settings in visible mode\n      set_manual_settings: false,\n      // log ip address data\n      log_ip_address: false,\n      // log http headers\n      log_http_headers: false,\n      // how long to sleep between requests. a random sleep interval within the range [a,b]\n      // is drawn before every request. empty string for no sleeping.\n      sleep_range: null,\n\n      logger: createLogger({\n        level: \"info\",\n        format: combine(\n          timestamp(),\n          printf(({ level, message, timestamp }) => {\n            return `${timestamp} [${level}] ${message}`;\n          })\n        ),\n        transports: [new transports.Console()],\n      }),\n      platform: \"facebook\",\n      keywords: [\"nodejs rocks\"],\n      // whether to start the browser in headless mode\n      headless: true,\n      // specify flags passed to chrome here\n      // About our defaults values https://peter.sh/experiments/chromium-command-line-switches/\n      chrome_flags: [\n        \"--disable-infobars\",\n        \"--window-position=0,0\",\n        \"--ignore-certifcate-errors\",\n        \"--ignore-certifcate-errors-spki-list\",\n        \"--no-sandbox\",\n        \"--disable-setuid-sandbox\",\n        \"--disable-dev-shm-usage\",\n        \"--disable-accelerated-2d-canvas\",\n        \"--disable-gpu\",\n        \"--window-size=1280,768\",\n        \"--start-fullscreen\",\n        \"--hide-scrollbars\",\n        \"--disable-notifications\",\n      ],\n      //fix google account can not login\n      ignoreDefaultArgs: [\n        \"--enable-automation\",\n        \"--disable-extensions\",\n        \"--disable-default-apps\",\n        \"--disable-component-extensions-with-background-pages\",\n      ],\n      // the number of pages to scrape for each keyword\n      num_pages: 1,\n      // path to output file, data will be stored in JSON\n      output_file: \"\",\n      // whether to also passthru all the html output of the serp pages\n      html_output: false,\n      // whether to strip JS and CSS from the html_output\n      // has only an effect if `html_output` is true\n      clean_html_output: true,\n      // remove all data images from the html\n      clean_data_images: true,\n      // whether to return a screenshot of serp pages as b64 data\n      screen_output: false,\n      // Scrape url from local file. Mainly used for testing.\n      scrape_from_file: \"\",\n      // whether to prevent images, css, fonts and media from being loaded\n      // will speed up scraping a great deal\n      block_assets: true,\n      // path to js module that extends functionality\n      // this module should export the functions:\n      // get_browser, handle_metadata, close_browser\n      //custom_func: resolve('examples/pluggable.js'),\n      custom_func: null,\n      throw_on_detection: false,\n      // List of proxies to use ['socks5://78.94.172.42:1080', 'http://localhost:1080']\n      proxies: null,\n      // a file with one proxy per line. Example:\n      // socks5://78.94.172.42:1080\n      // http://118.174.233.10:48400\n      proxy_file: \"\",\n      // whether to use proxies only\n      // when this is set to true, se-scraper will not use\n      // your default IP address\n      use_proxies_only: false,\n      // check if headless chrome escapes common detection techniques\n      // this is a quick test and should be used for debugging\n      test_evasion: false,\n      apply_evasion_techniques: true,\n      // settings for puppeteer-cluster\n      puppeteer_cluster_config: {\n        timeout: 30 * 60 * 1000, // max timeout set to 30 minutes\n        monitor: false,\n        concurrency: Cluster.CONCURRENCY_BROWSER,\n        maxConcurrency: 1,\n      },\n    });\n    \n    this.logger = this.config.logger;\n\n    if (config.sleep_range) {\n      // parse an array\n      config.sleep_range = eval(config.sleep_range);\n\n      if (\n        config.sleep_range.length !== 2 \n      ) {\n        throw \"sleep_range is not a valid array of two integers.\";\n      }\n    }\n\n    if (fs.existsSync(this.config.keyword_file)) {\n      this.config.keywords = read_keywords_from_file(this.config.keyword_file);\n    }\n\n    if (this.config.proxies && this.config.proxy_file) {\n      throw new Error(\n        \"Either use a proxy_file or specify a proxy for all connections. Do not use both options.\"\n      );\n    }\n\n    if (this.config.proxy_file) {\n      this.config.proxies = read_keywords_from_file(this.config.proxy_file);\n      this.logger.info(`${this.config.proxies.length} proxies read from file.`);\n    }\n\n    if (!this.config.proxies && this.config.use_proxies_only) {\n      throw new Error(\n        \"Must provide at least one proxy in proxies if you enable use_proxies_only\"\n      );\n    }\n\n    debug(\"this.config=%O\", this.config);\n  }\n\n  /*\n   * Launches the puppeteer cluster or browser.\n   *\n   * Returns true if the browser was successfully launched. Otherwise will return false.\n   */\n  async start() {\n    if (this.config.custom_func) {\n      if (fs.existsSync(this.config.custom_func)) {\n        try {\n          const PluggableClass = require(this.config.custom_func);\n          this.pluggable = new PluggableClass({\n            config: this.config,\n            context: this.context,\n          });\n        } catch (exception) {\n          console.error(exception);\n          return false;\n        }\n      } else {\n        console.error(`File \"${this.config.custom_func}\" does not exist!`);\n        return false;\n      }\n    }\n\n    const chrome_flags = _.clone(this.config.chrome_flags);\n\n    if (this.pluggable && this.pluggable.start_browser) {\n      // launch_args.config = this.config;\n      this.browser = await this.pluggable.start_browser({\n        config: this.config,\n      });\n      // console.log(\"229\")\n      this.page = await this.browser.newPage();\n    } else {\n      \n      // if no custom start_browser functionality was given\n      // use puppeteer-cluster for scraping\n\n      let proxies;\n      // if we have at least one proxy, always use CONCURRENCY_BROWSER\n      // and set maxConcurrency to this.config.proxies.length + 1\n      // else use whatever this.configuration was passed\n      if (this.config.proxies && this.config.proxies.length > 0) {\n        // because we use real browsers, we ran out of memory on normal laptops\n        // when using more than maybe 5 or 6 browsers.\n        // therefore hardcode a limit here\n        // TODO not sure this what we want\n        this.numClusters = Math.min(\n          this.config.proxies.length + (this.config.use_proxies_only ? 0 : 1),\n          MAX_ALLOWED_BROWSERS\n        );\n        proxies = _.clone(this.config.proxies);\n\n        // Insert a first config without proxy if use_proxy_only is false\n        if (this.config.use_proxies_only === false) {\n          proxies.unshift(null);\n        }\n      } else {\n        this.numClusters = this.config.puppeteer_cluster_config.maxConcurrency;\n        proxies = _.times(this.numClusters, null);\n      }\n\n      this.logger.info(`Using ${this.numClusters} clusters.`);\n\n      // Give the per browser options\n      const perBrowserOptions = _.map(proxies, (proxy) => {\n        const userAgent = this.config.random_user_agent\n          ? new UserAgent({ deviceCategory: \"desktop\" }).toString()\n          : this.config.user_agent;\n        let args = chrome_flags.concat([`--user-agent=${userAgent}`]);\n\n        if (proxy) {\n          args = args.concat([`--proxy-server=${proxy}`]);\n        }\n\n        return {\n          headless: this.config.headless,\n          ignoreHTTPSErrors: true,\n          args,\n        };\n      });\n\n      debug(\"perBrowserOptions=%O\", perBrowserOptions);\n\n      // puppeteer.use(_StealthPlugin());\n      // puppeteer.use(_AdblockerPlugin());\n\n      const puppeteer = addExtra(vanillaPuppeteer);\n\n      // Add stealth plugin and use defaults (all tricks to hide puppeteer usage)\n      //  puppeteer.use(Stealth());\n\n      // Add adblocker plugin to block all ads and trackers (saves bandwidth)\n      // puppeteer.use(AdblockerPlugin({ blockTrackers: true }));\n\n      this.cluster = await Cluster.launch({\n        puppeteer,\n        monitor: this.config.puppeteer_cluster_config.monitor,\n        timeout: this.config.puppeteer_cluster_config.timeout, // max timeout set to 30 minutes\n        concurrency: CustomConcurrencyImpl,\n        maxConcurrency: this.numClusters,\n        puppeteerOptions: {\n          // puppeteer:puppeteer,\n          perBrowserOptions: perBrowserOptions,\n        },\n      });\n    }\n  }\n\n  /*\n   * login the socila media platform\n   */\n  async login(scrape_config = {}) {\n    Object.assign(this.config, scrape_config);\n\n    // var results = {};\n    // var num_requests = 0;\n    // var metadata = {};\n    // var startTime = Date.now();\n\n    if (this.pluggable && this.pluggable.start_browser) {\n      // console.log(this.config.platform)\n      this.scraper = getScraper(this.config.platform, {\n        config: this.config,\n        context: this.context,\n        pluggable: this.pluggable,\n        page: this.page,\n        tmppath: this.tmppath,\n      });\n\n      await this.scraper.runLogin(this.page);\n    } else {\n      // Each browser will get N/(K+1) keywords and will issue N/(K+1) * M total requests to the search engine.\n      // https://github.com/GoogleChrome/puppeteer/issues/678\n      // The question is: Is it possible to set proxies per Page? Per Browser?\n      // as far as I can see, puppeteer cluster uses the same puppeteerOptions\n      // for every browser instance. We will use our custom puppeteer-cluster version.\n      // https://www.npmjs.com/package/proxy-chain\n      // this answer looks nice: https://github.com/GoogleChrome/puppeteer/issues/678#issuecomment-389096077\n      let chunks = [];\n      for (var n = 0; n < this.numClusters; n++) {\n        chunks.push([]);\n      }\n      for (var k = 0; k < this.config.keywords.length; k++) {\n        chunks[k % this.numClusters].push(this.config.keywords[k]);\n      }\n\n      debug(\"chunks=%o\", chunks);\n\n      let execPromises = [];\n      for (var c = 0; c < chunks.length; c++) {\n        const config = _.clone(this.config);\n        config.keywords = chunks[c];\n\n        var obj = getScraper(this.config.platform, {\n          config: config,\n          context: {},\n          pluggable: this.pluggable,\n        });\n\n        var boundMethod = obj.runLogin.bind(obj);\n        execPromises.push(this.cluster.execute({}, boundMethod));\n      }\n\n      await Promise.all(execPromises);\n\n      // Merge results and metadata per keyword\n      // for (let promiseReturn of promiseReturns) {\n      //     Object.assign(results, promiseReturn.results);\n      //     Object.assign(metadata, promiseReturn.metadata);\n      //     num_requests += promiseReturn.num_requests;\n      // }\n    }\n\n    // let timeDelta = Date.now() - startTime;\n    // let ms_per_request = timeDelta/num_requests;\n\n    // this.logger.info(`Scraper took ${timeDelta}ms to perform ${num_requests} requests.`);\n    // this.logger.info(`On average ms/request: ${ms_per_request}ms/request`);\n\n    // if (this.pluggable && this.pluggable.handle_results) {\n    //     await this.pluggable.handle_results(results);\n    // }\n\n    // metadata.elapsed_time = timeDelta.toString();\n    // metadata.ms_per_keyword = ms_per_request.toString();\n    // metadata.num_requests = num_requests;\n\n    // debug('metadata=%O', metadata);\n\n    // if (this.pluggable && this.pluggable.handle_metadata) {\n    //     await this.pluggable.handle_metadata(metadata);\n    // }\n\n    // if (this.config.output_file) {\n    //     this.logger.info(`Writing results to ${this.config.output_file}`);\n    //     write_results(this.config.output_file, JSON.stringify(results, null, 4));\n    // }\n\n    // return {\n    //     results: results,\n    //     metadata: metadata || {},\n    // };\n  }\n\n  /*\n   * get data url from platform\n   */\n  async searchdata(scrape_config = {}) {\n    Object.assign(this.config, scrape_config);\n\n    if (this.pluggable && this.pluggable.start_browser) {\n      // console.log(this.config.platform)\n      this.scraper = getScraper(this.config.platform, {\n        config: this.config,\n        context: this.context,\n        pluggable: this.pluggable,\n        page: this.page,\n        tmppath: this.tmppath,\n      });\n\n      await this.scraper.workersearchdata(this.page);\n    } else {\n      // Each browser will get N/(K+1) keywords and will issue N/(K+1) * M total requests to the search engine.\n      // https://github.com/GoogleChrome/puppeteer/issues/678\n      // The question is: Is it possible to set proxies per Page? Per Browser?\n      // as far as I can see, puppeteer cluster uses the same puppeteerOptions\n      // for every browser instance. We will use our custom puppeteer-cluster version.\n      // https://www.npmjs.com/package/proxy-chain\n      // this answer looks nice: https://github.com/GoogleChrome/puppeteer/issues/678#issuecomment-389096077\n      let chunks = [];\n      for (var n = 0; n < this.numClusters; n++) {\n        chunks.push([]);\n      }\n      for (var k = 0; k < this.config.keywords.length; k++) {\n        chunks[k % this.numClusters].push(this.config.keywords[k]);\n      }\n\n      debug(\"chunks=%o\", chunks);\n\n      let execPromises = [];\n      for (var c = 0; c < chunks.length; c++) {\n        const config = _.clone(this.config);\n        config.keywords = chunks[c];\n\n        var obj = getScraper(this.config.platform, {\n          config: config,\n          context: {},\n          pluggable: this.pluggable,\n        });\n\n        var boundMethod = obj.workersearchdata.bind(obj);\n        execPromises.push(this.cluster.execute({}, boundMethod));\n      }\n\n      await Promise.all(execPromises);\n\n      // Merge results and metadata per keyword\n      // for (let promiseReturn of promiseReturns) {\n      //     Object.assign(results, promiseReturn.results);\n      //     Object.assign(metadata, promiseReturn.metadata);\n      //     num_requests += promiseReturn.num_requests;\n      // }\n    }\n\n    // let timeDelta = Date.now() - startTime;\n    // let ms_per_request = timeDelta/num_requests;\n\n    // this.logger.info(`Scraper took ${timeDelta}ms to perform ${num_requests} requests.`);\n    // this.logger.info(`On average ms/request: ${ms_per_request}ms/request`);\n\n    // if (this.pluggable && this.pluggable.handle_results) {\n    //     await this.pluggable.handle_results(results);\n    // }\n\n    // metadata.elapsed_time = timeDelta.toString();\n    // metadata.ms_per_keyword = ms_per_request.toString();\n    // metadata.num_requests = num_requests;\n\n    // debug('metadata=%O', metadata);\n\n    // if (this.pluggable && this.pluggable.handle_metadata) {\n    //     await this.pluggable.handle_metadata(metadata);\n    // }\n\n    // if (this.config.output_file) {\n    //     this.logger.info(`Writing results to ${this.config.output_file}`);\n    //     write_results(this.config.output_file, JSON.stringify(results, null, 4));\n    // }\n\n    // return {\n    //     results: results,\n    //     metadata: metadata || {},\n    // };\n  }\n\n  /*\n   * Quit the puppeteer cluster/browser.\n   */\n  async quit() {\n    if (this.pluggable && this.pluggable.close_browser) {\n      await this.pluggable.close_browser();\n    } else {\n      await this.cluster.idle();\n      await this.cluster.close();\n    }\n  }\n}\n\nmodule.exports = {\n  ScrapeManager: ScrapeManager,\n};\n"]}