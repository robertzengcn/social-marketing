{"version":3,"file":"remotesource.js","sourceRoot":"","sources":["../src/remotesource.ts"],"names":[],"mappings":"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","sourcesContent":["export { };\nconst axios = require(\"axios\");\nconst debug = require('debug')('RemoteSource:RemoteSource');\nconst FormData = require('form-data');\ntype sosetting = {\n  sotype: string;\n  socialuser: string;\n  socialpass: string;\n  proxy: {\n    proxy: string;\n    user: string;\n    pass: string;\n  },\n}\nexport type Linkdata = {\n  title: string,\n  url: string,\n  content?: string,\n  lang: string,\n  socialtask_id: number,\n}\ntype socialTask = {\n  id: number,\n  campaign_id: number,\n  campaign_name: string,\n  tag: string,\n  type: string,\n  keywords: Array<string>,\n}\ntype configType = {\n  REMOTEADD: string,\n  REMOTEUSERNAME: string,\n  REMOTEPASSWORD: string,\n}\nexport class RemoteSource {\n  REMOTEADD: string;\n  REMOTEUSERNAME: string;\n  REMOTEPASSWORD: string;\n  constructor() {\n    const config = this.readenv();\n    this.REMOTEADD = config.REMOTEADD;\n    this.REMOTEUSERNAME = config.REMOTEUSERNAME;\n    this.REMOTEPASSWORD = config.REMOTEPASSWORD;\n  }\n\n\n  readenv(): configType {\n    //read config from .env file\n    let envcofig = this.readConfig();\n    debug(envcofig)\n    //check key exist in object\n    if (!envcofig.hasOwnProperty(\"REMOTEADD\")) {\n      throw new Error(`REMOTEADD not found in .env file`);\n    }\n    if (!envcofig.hasOwnProperty(\"REMOTEUSERNAME\")) {\n      throw new Error(`USERNAME not found in .env file`);\n    }\n    if (!envcofig.hasOwnProperty(\"REMOTEPASSWORD\")) {\n      throw new Error(`PASSWORD not found in .env file`);\n    }\n    return envcofig as configType;\n  }\n\n  /**\n   * read config from .env File\n   *\n   * @returns {object} config\n   * */\n  readConfig(): object {\n    const result = require(\"dotenv\").config();\n    if (result.error) {\n      throw result.error;\n    }\n    return result.parsed;\n  }\n\n  /**\n   * get response from remote servive\n   * @return object\n   */\n  async getRemoteConfig(campaignId): Promise<sosetting> {\n    // let envconfig = await readenv();\n\n    let sosetvar = await axios\n      .get(this.REMOTEADD + \"/api/getsobyCam/?campaign_id=\" + campaignId, {\n        auth: {\n          username: this.REMOTEUSERNAME,\n          password: this.REMOTEPASSWORD,\n        },\n      })\n      .then(function (res) {\n        if (parseInt(res.status) != 200) {\n          throw new Error(\"code not equal 200\");\n        }\n        if (!res.data.status) {\n          throw new Error(\"code not equal 200\");\n        }\n        // console.log(res.status)\n        // console.log(res.data.data.user)\n        // console.log(res.data.data.pass)\n        // console.log(res.data.data.proxy)\n        const sosetting = {\n          sotype: res.data.data.sotype,\n          socialuser: res.data.data.user,\n          socialpass: res.data.data.pass,\n          proxy: {\n            proxy: res.data.data.proxy.url,\n            user: res.data.data.proxy.user,\n            pass: res.data.data.proxy.pass,\n          },\n        };\n        return sosetting;\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n\n    return sosetvar;\n  }\n\n  /**\n   * get campaign from remote servive\n   */\n  async getCampaignlist(): Promise<Array<socialTask>> {\n    const campignlist = await axios\n      .get(this.REMOTEADD + \"/api/listsotask\", {\n        auth: {\n          username: this.REMOTEUSERNAME,\n          password: this.REMOTEPASSWORD,\n        },\n      })\n      .then(function (res) {\n        if (parseInt(res.status) != 200) {\n          throw new Error(\"code not equal 200\");\n        }\n        if (!res.data.data) {\n          throw new Error(\"data not exist\");\n        }\n        return res.data.data as Array<socialTask>;\n\n      })\n      .catch(function (error) {\n        throw new Error(\"code not equal 200\");\n        // console.error(error);\n      });\n    return campignlist;\n  }\n  /**\n   * save link to remote servive\n   */\n  async saveLinkremote(link: Linkdata): Promise<number> {\n    const FormData = require('form-data');\n    debug(link)\n    let data = new FormData();\n    data.append('title', link.title);\n    if(link.content){\n    data.append('content', link.content);\n    }\n    data.append('url', link.url);\n    data.append('lang', link.lang);\n    if(link.socialtask_id){\n    data.append('socialtask_id', link.socialtask_id);\n    }\n    const linkId=await axios.post(this.REMOTEADD + \"/api/savesolink\", data,\n    {\n      auth: {\n        username: this.REMOTEUSERNAME,\n        password: this.REMOTEPASSWORD,\n      },\n    })\n      .then(function (res) {\n        debug(res);\n        return res.data as number;\n      })\n      .catch(function (error) {\n        // console.log(error);\n        throw new Error(error.message);\n      });\n      return linkId;\n  }\n}\n\nmodule.exports = {\n  RemoteSource: RemoteSource,\n\n};\n"]}